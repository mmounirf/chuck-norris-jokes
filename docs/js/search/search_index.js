var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/injectables/AlertService.html",[0,0.807,1,1.351]],["body/injectables/AlertService.html",[0,1.348,1,2.029,2,0.313,3,0.266,4,0.221,5,2.992,6,0.523,7,1.11,8,1.601,9,3.902,10,4.684,11,3.381,12,4.774,13,5.876,14,3,15,0.777,16,3.591,17,1.425,18,0.034,19,1.013,20,0.929,21,1.308,22,2.302,23,4.684,24,0.851,25,1.103,26,0.539,27,3.591,28,0.413,29,4.684,30,2.597,31,1.703,32,1.425,33,0.266,34,0.266,35,1.703,36,1.103,37,1.556,38,3.591,39,3.591,40,3.591,41,2.992,42,3.591,43,0.024,44,0.024]],["title/injectables/ApiService.html",[0,0.807,45,1.479]],["body/injectables/ApiService.html",[0,1.224,2,0.259,3,0.22,4,0.183,6,0.432,7,0.976,8,1.907,15,1.162,17,1.177,18,0.034,19,0.837,21,1.08,24,1.398,25,0.911,26,0.64,28,0.341,31,1.407,32,1.177,33,0.22,34,0.22,35,1.407,43,0.021,44,0.021,45,1.953,46,2.145,47,4.202,48,5.111,49,2.64,50,4.473,51,2.967,52,4.121,53,2.967,54,2.967,55,4.119,56,2.967,57,4.119,58,2.967,59,0.992,60,2.472,61,2.145,62,2.967,63,4.119,64,2.472,65,1.707,66,1.784,67,2.967,68,1.5,69,2.145,70,2.472,71,2.145,72,2.967,73,2.967,74,2.967,75,2.967,76,2.472,77,3.033,78,2.472,79,2.967,80,2.145,81,2.472,82,2.967]],["title/components/AppComponent.html",[83,0.359,84,0.958]],["body/components/AppComponent.html",[2,0.289,3,0.246,4,0.204,6,0.482,8,1.018,11,2.556,15,0.717,18,0.033,19,1.253,20,0.857,26,0.381,28,0.381,32,1.763,33,0.246,34,0.246,43,0.023,44,0.023,83,0.642,84,1.644,85,1.436,86,1.436,87,1.436,88,1.436,89,2.761,90,1.436,91,2.644,92,2.222,93,1.924,94,5.01,95,1.924,96,4.442,97,1.763,98,4.459,99,1.907,100,1.726,101,4.442,102,3.701,103,4.442,104,3.314,105,0.935,106,1.924,107,1.763,108,1.924,109,2.319,110,1.436,111,1.436,112,1.018,113,1.436,114,0.935,115,1.436,116,1.018,117,1.436,118,0.935,119,1.436,120,1.436,121,1.018,122,1.315,123,1.924,124,1.018,125,0.935,126,1.436,127,1.436]],["title/modules/AppModule.html",[128,0.739,129,1.999]],["body/modules/AppModule.html",[2,0.262,3,0.223,4,0.185,18,0.034,26,0.702,28,0.346,33,0.308,34,0.223,43,0.021,44,0.021,64,2.504,84,1.874,92,1.094,105,0.848,112,1.714,118,1.573,128,0.984,129,4.022,130,1.425,131,2.741,132,2.741,133,2.391,134,2.504,135,2.504,136,2.504,137,2.504,138,3.211,139,2.032,140,2.645,141,2.391,142,1.729,143,1.425,144,3.005,145,2.173,146,2.173,147,4.156,148,3.462,149,1.926,150,2.164,151,3.005,152,3.005,153,4.156,154,3.005,155,3.005,156,2.504,157,1.926,158,2.504,159,4.156]],["title/classes/AppPage.html",[34,0.231,160,2.256]],["body/classes/AppPage.html",[2,0.367,3,0.312,4,0.259,6,0.612,7,1.226,15,1.12,18,0.033,24,1.386,26,0.484,32,1.668,33,0.312,34,0.384,43,0.027,44,0.027,107,1.668,149,2.694,160,3.742,161,3.502,162,5.852,163,5.852,164,4.203,165,4.203,166,3.502,167,4.203,168,4.203,169,4.203]],["title/modules/AppRoutingModule.html",[128,0.739,138,1.795]],["body/modules/AppRoutingModule.html",[2,0.34,3,0.289,4,0.24,18,0.034,26,0.676,28,0.448,33,0.366,34,0.289,43,0.025,44,0.025,68,1.418,83,0.448,118,1.391,128,0.922,138,2.839,150,2.569,156,3.243,157,2.495,158,3.243,170,3.893,171,3.893,172,3.567,173,3.893,174,3.893,175,2.568,176,3.567,177,1.545,178,3.916,179,4.933,180,3.893,181,3.893,182,3.893,183,3.243,184,3.893]],["title/guards/AuthGuardService.html",[172,2.256,185,1.795]],["body/guards/AuthGuardService.html",[0,1.115,1,1.867,2,0.277,3,0.235,4,0.195,6,0.461,7,1.021,8,0.974,15,0.686,18,0.034,24,1.16,26,0.653,28,0.365,31,1.503,32,1.258,33,0.235,34,0.235,35,1.503,36,0.974,37,2.121,43,0.022,44,0.022,45,2.043,50,2.64,52,3.541,65,1.824,68,1.154,77,2.032,81,2.64,172,3.117,177,1.258,183,4.724,185,1.824,186,4.31,187,3.17,188,3.17,189,2.043,190,2.043,191,3.17,192,3.17,193,3.17,194,5.256,195,3.139,196,1.258,197,1.824,198,3.17,199,2.032,200,2.032,201,1.503,202,3.17,203,3.17,204,3.17,205,3.17,206,3.17,207,4.31,208,4.897,209,2.64,210,3.17,211,3.17,212,2.032]],["title/injectables/AuthService.html",[0,0.807,190,1.479]],["body/injectables/AuthService.html",[0,1.283,2,0.284,3,0.241,4,0.2,6,0.473,7,1.038,8,1.346,15,0.949,18,0.034,24,1.353,25,1.346,26,0.504,28,0.374,31,1.541,32,1.29,33,0.241,34,0.241,35,1.541,43,0.023,44,0.023,66,2.3,71,2.35,76,4.423,78,2.707,143,2.078,177,1.29,189,2.352,190,2.078,195,3.18,212,2.083,213,2.707,214,4.759,215,4.759,216,3.249,217,2.522,218,4.423,219,3.249,220,4.383,221,4.383,222,3.652,223,4.383,224,3.249,225,2.083,226,2.707,227,3.249]],["title/components/HeaderComponent.html",[83,0.359,112,0.958]],["body/components/HeaderComponent.html",[2,0.246,3,0.209,4,0.174,6,0.411,7,0.942,8,0.867,15,1.082,17,1.12,18,0.033,19,1.299,20,0.73,21,1.028,24,1.185,25,1.222,26,0.458,28,0.325,33,0.209,34,0.209,36,1.222,37,1.223,43,0.02,44,0.02,49,2.55,59,1.33,80,2.876,83,0.607,84,0.867,85,1.223,86,1.223,87,1.223,88,1.223,90,1.223,91,2.562,92,2.153,93,1.723,95,1.723,105,0.796,106,1.723,107,1.578,108,1.723,109,2.166,110,1.223,111,1.223,112,1.536,113,1.223,114,0.796,115,1.223,116,0.867,117,1.223,118,0.796,119,1.223,120,1.223,121,0.867,122,1.12,123,1.723,124,0.867,125,0.796,126,1.223,127,1.223,189,1.886,190,2.371,196,1.578,199,2.55,200,1.809,214,4.166,215,4.557,228,2.351,229,2.184,230,4.606,231,3.977,232,2.371,233,2.822,234,2.822,235,2.822,236,2.822,237,2.822,238,2.822,239,2.822,240,3.977,241,3.977,242,3.977,243,3.977]],["title/interfaces/Joke.html",[59,1.043,244,1.625]],["body/interfaces/Joke.html",[2,0.371,3,0.315,4,0.262,6,0.618,11,3.243,14,3.243,18,0.032,20,1.458,21,1.897,33,0.315,43,0.027,44,0.027,59,2.052,97,2.068,244,2.714,245,3.54,246,5.874,247,4.248,248,3.612]],["title/components/JokesComponent.html",[83,0.359,114,0.88]],["body/components/JokesComponent.html",[1,2.059,2,0.168,3,0.143,4,0.119,6,0.28,7,0.709,8,1.273,9,1.603,11,1.722,14,1.722,15,1.14,17,1.644,18,0.033,19,1.34,20,1.283,21,1.509,24,1.175,25,1.128,26,0.477,28,0.221,33,0.143,34,0.143,36,0.919,37,0.833,43,0.015,44,0.015,59,1.963,66,0.833,83,0.517,84,0.591,85,0.833,86,1.296,87,0.833,88,0.833,90,0.833,91,2.333,92,1.961,93,1.296,95,1.296,97,1.188,105,0.543,106,1.296,107,1.188,108,1.591,109,1.795,110,0.833,111,0.833,112,0.591,113,0.833,114,1.168,115,0.833,116,0.591,117,0.833,118,0.543,119,0.833,120,0.833,121,0.591,122,0.763,123,1.296,124,0.591,125,0.543,126,0.833,127,0.833,189,1.419,196,1.188,197,2.735,229,1.741,232,1.964,247,2.164,248,1.918,249,1.603,250,3.673,251,2.992,252,2.493,253,4.143,254,2.493,255,2.493,256,3.739,257,1.924,258,2.158,259,2.992,260,2.164,261,1.924,262,2.493,263,1.924,264,1.924,265,2.493,266,1.924,267,1.924,268,2.493,269,1.924,270,1.924,271,1.603,272,1.603,273,1.391,274,1.391,275,1.924,276,2.164,277,3.099,278,1.603,279,1.603,280,1.924,281,1.924,282,1.924,283,2.992,284,2.493,285,3.437,286,2.493,287,1.924,288,1.924,289,1.924,290,1.603,291,2.992,292,1.924,293,1.924,294,1.603,295,1.924,296,1.924,297,1.603,298,1.924,299,1.924,300,2.992,301,2.992,302,4.143,303,2.656,304,2.992,305,2.992,306,1.924,307,1.924,308,1.233,309,1.603,310,1.924,311,1.924,312,1.924,313,1.233,314,1.233,315,1.918,316,1.603,317,1.233,318,1.233,319,1.233,320,1.391,321,1.603,322,1.924,323,1.924,324,1.924,325,1.924]],["title/injectables/JokesManagementService.html",[0,0.807,258,1.625]],["body/injectables/JokesManagementService.html",[0,0.861,2,0.144,3,0.123,4,0.102,6,0.241,7,0.629,14,1.529,15,1.087,17,1.656,18,0.034,19,1.177,20,1.079,21,1.519,24,1.4,25,1.542,26,0.306,28,0.19,31,0.785,32,0.657,33,0.123,34,0.123,35,0.785,36,0.508,43,0.014,44,0.014,47,3.221,59,2.105,60,1.379,68,0.603,97,1.054,189,1.578,212,1.061,217,1.529,218,4.6,225,1.061,247,3.725,248,3.977,252,2.213,254,2.213,255,2.213,258,1.384,262,3.174,265,2.213,268,2.213,276,1.921,277,3.085,285,3.221,297,2.213,303,3.221,326,4.292,327,1.197,328,3.81,329,3.81,330,3.711,331,2.657,332,2.657,333,1.655,334,4.172,335,3.476,336,1.655,337,1.655,338,1.655,339,2.657,340,2.657,341,2.657,342,2.657,343,1.655,344,2.657,345,3.81,346,1.655,347,3.81,348,3.81,349,1.655,350,1.379,351,1.655,352,4.454,353,2.657,354,2.657,355,1.655,356,2.657,357,2.657,358,1.655,359,2.657,360,2.657,361,1.655]],["title/guards/JokesResolverService.html",[185,1.795,362,2.256]],["body/guards/JokesResolverService.html",[0,1.247,2,0.328,3,0.279,4,0.231,6,0.546,7,1.142,15,1.043,17,1.49,18,0.033,19,1.059,20,0.971,21,1.367,24,1.142,26,0.669,28,0.432,31,1.78,32,1.49,33,0.279,34,0.279,36,1.153,43,0.025,44,0.025,45,2.819,52,3.85,59,1.255,65,2.16,71,2.715,177,1.49,185,2.16,196,1.49,274,2.715,362,3.486,363,5.325,364,3.754,365,4.954,366,3.754,367,3.754,368,3.754,369,2.715,370,3.754]],["title/components/LoginComponent.html",[83,0.359,116,0.958]],["body/components/LoginComponent.html",[1,1.856,2,0.179,3,0.152,4,0.126,6,0.298,7,0.744,8,0.63,12,1.707,15,0.927,17,0.813,18,0.033,19,1.078,20,0.53,21,0.746,22,1.314,24,0.744,25,0.965,26,0.584,28,0.236,33,0.152,34,0.152,36,0.965,37,1.856,41,1.707,43,0.016,44,0.016,45,2.031,49,3.254,66,1.656,77,1.314,83,0.532,84,0.63,85,0.888,86,0.888,87,0.888,88,0.888,90,0.888,91,2.374,92,1.996,93,1.361,95,1.361,97,1.247,99,1.179,100,1.067,105,0.578,106,1.361,107,1.247,108,1.856,109,1.856,110,0.888,111,0.888,112,0.63,113,0.888,114,0.578,115,0.888,116,1.316,117,0.888,118,0.578,119,0.888,120,0.888,121,0.63,122,0.813,123,1.361,124,0.63,125,0.578,126,0.888,127,0.888,177,0.813,190,2.031,195,3.254,196,1.247,197,2.199,199,2.45,200,1.314,201,2.312,209,1.707,217,1.808,226,1.707,229,1.812,232,2.031,277,1.808,285,2.272,290,1.707,294,1.707,308,1.314,313,1.314,314,2.014,315,2.747,317,1.314,318,1.314,319,2.014,320,1.482,369,1.482,371,1.707,372,3.822,373,3.142,374,4.876,375,4.285,376,2.05,377,2.05,378,3.142,379,2.05,380,2.05,381,3.822,382,2.618,383,4.621,384,4.285,385,4.062,386,2.05,387,1.707,388,1.707,389,2.05,390,1.482,391,1.707,392,2.618,393,2.05,394,2.05,395,2.05,396,2.05,397,1.707,398,2.05,399,1.707,400,2.05,401,1.707,402,2.05,403,1.707,404,2.05,405,2.05,406,2.05,407,3.142,408,2.618,409,4.285,410,3.099,411,3.142,412,1.482,413,2.618,414,1.482,415,2.05,416,2.05,417,2.618,418,1.707,419,3.142]],["title/modules/MaterialModule.html",[128,0.739,139,1.136]],["body/modules/MaterialModule.html",[2,0.363,3,0.308,4,0.256,18,0.033,26,0.642,28,0.479,30,3.007,33,0.381,34,0.308,43,0.026,44,0.026,68,1.514,128,0.985,139,2.181,150,2.678,420,3.007,421,4.283,422,4.283,423,4.283,424,4.283,425,4.283,426,4.283,427,4.283,428,4.283,429,4.283]],["title/components/PageNotFoundComponent.html",[83,0.359,118,0.88]],["body/components/PageNotFoundComponent.html",[2,0.274,3,0.233,4,0.194,6,0.457,7,1.015,8,0.966,15,0.928,18,0.032,19,1.209,24,0.745,25,0.966,26,0.362,28,0.362,33,0.233,34,0.233,36,1.498,43,0.022,44,0.022,83,0.631,84,0.966,85,1.362,86,1.362,87,1.362,88,1.362,90,1.362,91,2.618,92,2.2,93,1.857,95,1.857,105,0.887,106,1.857,107,1.701,108,1.857,109,2.269,110,1.362,111,1.362,112,0.966,113,1.362,114,0.887,115,1.362,116,0.966,117,1.362,118,1.477,119,2.618,120,1.362,121,0.966,122,1.248,123,1.857,124,0.966,125,0.887,126,1.362,127,1.362,157,3.126,196,1.701,229,2.312,232,2.483,430,4.063,431,2.619,432,5.238,433,4.877,434,4.286,435,3.144,436,3.144]],["title/components/ProtectedLayoutComponent.html",[83,0.359,121,0.958]],["body/components/ProtectedLayoutComponent.html",[1,2.098,2,0.23,3,0.195,4,0.162,6,0.383,7,0.896,8,0.808,15,0.959,17,1.501,18,0.033,19,1.366,20,0.68,21,1.378,22,1.686,24,1.049,25,0.808,26,0.51,28,0.303,33,0.195,34,0.195,36,1.162,37,1.139,43,0.019,44,0.019,59,1.481,66,1.639,68,0.958,83,0.591,84,0.808,85,1.139,86,1.139,87,1.139,88,1.139,90,1.139,91,2.523,92,2.121,93,1.639,95,1.639,105,0.742,106,1.639,107,1.501,108,1.639,109,2.098,110,1.139,111,1.139,112,0.808,113,1.139,114,0.742,115,1.139,116,0.808,117,1.139,118,0.742,119,1.139,120,1.139,121,1.488,122,2.277,123,1.639,124,0.808,125,0.742,126,1.139,127,1.139,196,1.501,197,2.177,222,2.191,229,2.1,232,2.296,277,2.549,309,2.191,313,1.686,314,1.686,315,1.686,317,1.686,318,1.686,319,2.425,388,2.191,391,2.191,412,1.902,414,1.902,437,4.035,438,3.503,439,1.902,440,3.69,441,3.69,442,3.151,443,3.783,444,2.63,445,2.63,446,3.783,447,2.63,448,2.63,449,2.63,450,2.63,451,2.63,452,2.63,453,2.63,454,2.63,455,2.63,456,2.63]],["title/modules/ProtectedModule.html",[128,0.739,457,1.999]],["body/modules/ProtectedModule.html",[2,0.301,3,0.256,4,0.213,18,0.034,26,0.693,28,0.397,33,0.339,34,0.256,43,0.023,44,0.023,68,1.257,83,0.397,105,0.974,121,1.821,122,1.37,128,1.081,130,1.637,131,2.942,132,1.987,133,1.987,139,2.116,140,2.756,141,2.627,142,1.987,143,1.637,145,2.497,146,2.497,150,2.377,175,2.164,176,2.497,177,1.37,178,2.497,438,2.497,457,3.941,458,2.876,459,2.876,460,3.453,461,3.453,462,3.301,463,2.213,464,2.876,465,3.453,466,3.453]],["title/components/PublicLayoutComponent.html",[83,0.359,124,0.958]],["body/components/PublicLayoutComponent.html",[2,0.141,3,0.12,4,0.1,6,0.236,7,0.619,8,1.572,15,1.045,17,1.036,18,0.033,19,1.061,20,0.419,21,0.951,22,1.039,24,1.099,25,1.008,26,0.534,28,0.186,33,0.12,34,0.12,36,0.802,37,1.911,43,0.013,44,0.013,45,2.2,47,2.722,59,1.711,68,0.59,80,1.172,83,0.475,84,0.498,85,0.702,86,0.702,87,0.702,88,0.702,90,0.702,91,2.217,92,1.905,93,1.131,95,1.131,97,1.036,98,1.35,99,2.166,100,1.96,105,0.457,106,1.131,107,1.036,108,1.421,109,1.63,110,0.702,111,0.702,112,0.498,113,0.702,114,0.457,115,0.702,116,0.498,117,0.702,118,0.457,119,0.702,120,0.702,121,0.498,122,0.643,123,1.131,124,1.156,125,0.457,126,1.911,127,0.702,175,1.238,177,0.643,189,1.784,190,1.784,195,2.975,196,1.036,199,2.103,200,1.039,201,1.238,217,1.503,225,2.412,229,1.556,232,1.784,248,2.412,258,1.96,260,2.373,273,1.889,274,1.172,276,1.172,277,2.539,278,1.35,279,1.35,284,1.35,303,1.889,308,2.646,313,2.412,314,1.039,315,2.103,316,1.35,317,1.039,318,1.039,319,1.039,320,2.373,321,1.35,330,3.135,369,1.172,387,1.35,392,1.35,412,1.172,413,2.734,414,2.373,417,2.734,418,1.35,439,1.172,440,2.734,441,2.734,442,2.176,467,4.153,468,3.605,469,3.491,470,4.828,471,2.612,472,1.62,473,3.764,474,2.734,475,2.166,476,1.62,477,2.612,478,1.62,479,1.62,480,1.62,481,1.62,482,1.62,483,1.62,484,2.176,485,2.612,486,2.612,487,2.373,488,1.62,489,2.176,490,2.612,491,2.176,492,2.612,493,2.612,494,1.62,495,1.62,496,1.62,497,2.612,498,1.62,499,1.62,500,1.62,501,1.62,502,1.62,503,3.281,504,1.62,505,1.62,506,1.62,507,1.62,508,1.62,509,1.62,510,2.612,511,2.612,512,1.62,513,1.62,514,1.62,515,1.62,516,1.62,517,1.62,518,1.62,519,1.62,520,1.62,521,1.62,522,1.35,523,1.62,524,1.62,525,1.62,526,1.62,527,1.62,528,2.612,529,1.62]],["title/modules/PublicModule.html",[128,0.739,530,1.999]],["body/modules/PublicModule.html",[2,0.271,3,0.23,4,0.191,18,0.034,26,0.7,28,0.357,33,0.315,34,0.23,43,0.022,44,0.022,49,1.988,59,1.037,68,1.129,83,0.489,105,0.875,116,1.772,124,1.772,128,1.006,130,1.47,131,2.787,132,1.785,133,1.785,139,2.051,140,2.671,141,2.444,142,1.785,143,1.47,145,2.243,146,2.243,150,2.212,175,2.013,176,2.243,177,1.231,178,3.071,362,3.071,365,2.584,390,2.243,462,3.071,463,1.988,464,2.584,468,2.243,530,3.932,531,2.584,532,2.584,533,3.102,534,3.102,535,3.102,536,3.102,537,3.102,538,3.102,539,4.247,540,4.247,541,3.102,542,3.102]],["title/modules/SharedModule.html",[128,0.739,140,1.479]],["body/modules/SharedModule.html",[2,0.3,3,0.255,4,0.212,18,0.033,26,0.681,28,0.395,33,0.403,34,0.255,43,0.023,44,0.023,68,1.25,105,0.968,114,1.746,125,1.746,128,1.077,130,1.627,131,2.934,132,1.975,133,1.975,139,2.113,140,2.955,141,2.616,142,1.975,143,1.627,150,2.368,462,3.687,463,2.2,543,2.859,544,2.859,545,3.432,546,2.859,547,2.482,548,3.432,549,3.432,550,3.432,551,3.687]],["title/components/TimerComponent.html",[83,0.359,125,0.88]],["body/components/TimerComponent.html",[1,1.46,2,0.196,3,0.167,4,0.139,6,0.327,7,1.064,8,0.691,14,3.015,15,1.166,18,0.033,19,0.951,20,1.162,24,1.064,25,1.38,26,0.554,28,0.259,33,0.167,34,0.167,35,1.066,36,0.691,37,1.752,43,0.017,44,0.017,65,1.294,83,0.554,84,0.691,85,0.974,86,0.974,87,0.974,88,0.974,90,0.974,91,2.431,92,2.044,93,1.46,95,1.46,97,1.338,100,1.756,105,0.634,106,1.46,107,1.338,108,1.46,109,1.946,110,0.974,111,0.974,112,0.691,113,0.974,114,0.634,115,0.974,116,0.691,117,0.974,118,0.634,119,0.974,120,0.974,121,0.691,122,0.892,123,1.46,124,0.691,125,1.267,126,2.431,127,0.974,189,1.598,196,1.338,197,1.294,201,1.066,229,1.917,232,2.13,256,3.742,258,1.756,260,1.626,271,1.873,272,1.873,273,2.437,286,1.873,469,1.626,474,1.873,475,1.94,487,2.924,489,1.873,491,2.808,552,1.873,553,4.044,554,3.371,555,4.492,556,4.044,557,4.492,558,4.044,559,4.813,560,4.492,561,4.044,562,2.808,563,2.248,564,3.371,565,3.371,566,2.808,567,2.248,568,2.248,569,2.248,570,2.248,571,2.248,572,2.248,573,4.492,574,2.248,575,2.248,576,3.371,577,2.248,578,2.248,579,2.248,580,2.248,581,2.248,582,2.248,583,2.248,584,3.371,585,1.873]],["title/injectables/TimerManagementService.html",[0,0.807,475,1.795]],["body/injectables/TimerManagementService.html",[0,1.386,2,0.332,3,0.282,4,0.234,6,0.553,7,1.151,15,1.16,18,0.033,24,1.151,25,1.493,26,0.438,28,0.438,31,1.803,32,1.509,33,0.282,34,0.282,35,1.803,36,1.168,43,0.025,44,0.025,97,1.929,99,2.189,100,1.981,201,2.304,327,2.75,350,3.169,469,4.083,475,2.797,487,3.874,586,4.703,587,5.646,588,5.646,589,3.803,590,3.803,591,3.803,592,3.803]],["title/interfaces/User.html",[66,1.351,244,1.625]],["body/interfaces/User.html",[2,0.363,3,0.308,4,0.256,6,0.605,11,3.648,18,0.032,20,1.508,33,0.308,43,0.026,44,0.026,66,2.644,77,3.84,97,2.04,244,2.678,382,3.464,385,3.464,397,3.464,399,3.464,401,3.464,403,3.464,593,3.464,594,5.141]],["title/coverage.html",[595,3.552]],["body/coverage.html",[0,1.397,1,1.305,4,0.186,5,2.51,18,0.033,20,0.779,34,0.224,43,0.021,44,0.021,45,1.428,46,3.01,59,1.008,61,3.01,66,1.305,69,2.179,83,0.671,84,0.926,89,2.51,112,0.926,114,0.85,116,0.926,118,0.85,121,0.926,124,0.926,125,0.85,139,1.097,157,1.931,160,2.179,161,2.51,190,1.428,201,1.428,213,2.51,228,2.51,244,2.168,245,2.51,249,2.51,258,1.569,308,4.052,326,2.51,327,3.01,371,2.51,410,2.179,420,2.179,430,2.51,431,2.51,437,2.51,438,2.179,439,3.01,467,2.51,468,2.179,475,1.734,547,2.179,551,2.179,552,2.51,586,2.51,593,2.51,595,2.51,596,3.013,597,3.013,598,3.013,599,4.77,600,4.163,601,4.77,602,4.163,603,4.163,604,4.163,605,3.013,606,4.139,607,5.723,608,3.013,609,3.013,610,3.013,611,3.013,612,3.013,613,2.51,614,2.51,615,3.468,616,2.51,617,3.013,618,3.013]],["title/dependencies.html",[130,1.779,619,2.602]],["body/dependencies.html",[18,0.033,28,0.477,30,2.996,43,0.026,44,0.026,65,2.384,130,1.964,148,4.273,149,3.288,177,1.644,390,2.996,463,2.656,620,4.143,621,6.245,622,4.143,623,5.13,624,4.143,625,4.143,626,4.143,627,4.143,628,4.143,629,4.143,630,4.143,631,4.143,632,4.143,633,4.143,634,4.143,635,4.143]],["title/index.html",[6,0.379,562,2.167,636,2.602]],["body/index.html",[3,0.267,4,0.222,18,0.024,19,1.016,43,0.024,44,0.024,83,0.601,92,1.312,102,4.349,143,1.708,166,3.001,201,1.708,217,2.073,408,3.001,484,3.001,522,4.99,566,4.608,637,3.603,638,4.694,639,5.531,640,5.221,641,3.603,642,3.603,643,3.603,644,4.694,645,5.989,646,3.603,647,3.603,648,3.603,649,3.603,650,3.603,651,3.603,652,3.603,653,3.603,654,3.603,655,5.221,656,3.603,657,5.736,658,3.603,659,3.603,660,3.603,661,3.603,662,3.001,663,4.694,664,5.736,665,4.694,666,4.694,667,3.603,668,3.603,669,3.603,670,5.221,671,3.603,672,3.603,673,3.603]],["title/modules.html",[128,1.01]],["body/modules.html",[18,0.028,43,0.028,44,0.028,128,1.061,129,2.871,138,2.577,139,1.631,140,2.123,149,3.833,457,2.871,530,2.871,674,5.98,675,5.98,676,6.212,677,5.379,678,5.379]],["title/overview.html",[679,3.552]],["body/overview.html",[0,0.796,18,0.033,33,0.228,34,0.228,43,0.022,44,0.022,83,0.354,84,1.768,105,0.868,112,1.481,114,1.623,116,1.481,118,1.36,121,1.481,124,1.481,125,1.623,128,1,129,3.999,130,1.459,131,1.771,132,1.771,133,1.771,134,2.563,135,2.563,136,2.563,137,2.563,138,2.775,139,2.046,140,2.925,141,2.43,142,1.771,143,1.459,175,1.459,185,1.771,244,1.603,457,3.758,458,2.563,459,2.563,530,3.857,531,2.563,532,2.563,543,2.563,544,2.563,546,2.563,585,3.519,679,2.563,680,3.077,681,3.077,682,3.077,683,4.224]],["title/routes.html",[175,2.021]],["body/routes.html",[18,0.03,43,0.03,44,0.03,175,2.381]],["title/miscellaneous/variables.html",[606,2.714,684,2.167]],["body/miscellaneous/variables.html",[6,0.505,18,0.033,20,1.466,43,0.024,44,0.024,46,2.512,61,4.21,69,3.708,70,2.893,99,3.35,100,3.032,114,0.979,125,0.979,139,1.867,212,2.226,225,2.937,335,4.543,410,3.708,420,2.512,421,2.893,422,2.893,423,2.893,424,2.893,425,2.893,426,2.893,427,2.893,428,2.893,429,2.893,547,2.512,551,3.708,606,2.512,613,2.893,614,2.893,615,2.893,616,4.272,662,3.818,684,2.893,685,3.473,686,4.582,687,3.473,688,3.473,689,3.473,690,3.473,691,3.473,692,3.473,693,4.582,694,4.582]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":308,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{},"coverage.html":{}}}],["0!import",{"_index":529,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["0.8.26",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":682,"title":{},"body":{"overview.html":{}}}],["1.9.0",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":287,"title":{},"body":{"components/JokesComponent.html":{}}}],["100",{"_index":321,"title":{},"body":{"components/JokesComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["1000).subscribe((t",{"_index":581,"title":{},"body":{"components/TimerComponent.html":{}}}],["10px",{"_index":419,"title":{},"body":{"components/LoginComponent.html":{}}}],["14px",{"_index":325,"title":{},"body":{"components/JokesComponent.html":{}}}],["2",{"_index":683,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":517,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["22",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":415,"title":{},"body":{"components/LoginComponent.html":{}}}],["3000",{"_index":42,"title":{},"body":{"injectables/AlertService.html":{}}}],["300px",{"_index":516,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["400px",{"_index":310,"title":{},"body":{"components/JokesComponent.html":{}}}],["40px",{"_index":514,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["4px",{"_index":528,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["5",{"_index":585,"title":{},"body":{"components/TimerComponent.html":{},"overview.html":{}}}],["6",{"_index":680,"title":{},"body":{"overview.html":{}}}],["6.3.3",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["64px",{"_index":456,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["66",{"_index":609,"title":{},"body":{"coverage.html":{}}}],["7.1.0",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":642,"title":{},"body":{"index.html":{}}}],["8",{"_index":681,"title":{},"body":{"overview.html":{}}}],["9/10",{"_index":612,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["absolut",{"_index":520,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["account",{"_index":407,"title":{},"body":{"components/LoginComponent.html":{}}}],["account_circl",{"_index":242,"title":{},"body":{"components/HeaderComponent.html":{}}}],["activatedrout",{"_index":473,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["actual_compon",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["add",{"_index":276,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/PublicLayoutComponent.html":{}}}],["addjok",{"_index":471,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["addjoke(iscount",{"_index":477,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["addtofavorit",{"_index":252,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{}}}],["addtofavorites(jok",{"_index":262,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{}}}],["alert",{"_index":197,"title":{},"body":{"guards/AuthGuardService.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["alert.servic",{"_index":193,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["alertservic",{"_index":1,"title":{"injectables/AlertService.html":{}},"body":{"injectables/AlertService.html":{},"guards/AuthGuardService.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{}}}],["align",{"_index":317,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["alreadi",{"_index":295,"title":{},"body":{"components/JokesComponent.html":{}}}],["angular",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":463,"title":{},"body":{"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{}}}],["angular/compil",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":28,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":390,"title":{},"body":{"components/LoginComponent.html":{},"modules/PublicModule.html":{},"dependencies.html":{}}}],["angular/materi",{"_index":30,"title":{},"body":{"injectables/AlertService.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"dependencies.html":{}}}],["api",{"_index":198,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["api.servic",{"_index":192,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["api_url",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiserivc",{"_index":378,"title":{},"body":{"components/LoginComponent.html":{}}}],["apiservic",{"_index":45,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{},"coverage.html":{}}}],["apiurl",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"index.html":{}}}],["app.compon",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":84,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["appmodul",{"_index":129,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":160,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodul",{"_index":138,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":248,"title":{},"body":{"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/PublicLayoutComponent.html":{}}}],["artifact",{"_index":658,"title":{},"body":{"index.html":{}}}],["auth",{"_index":199,"title":{},"body":{"guards/AuthGuardService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["auth.servic",{"_index":191,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["authguardservic",{"_index":172,"title":{"guards/AuthGuardService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{}}}],["author",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{}}}],["authservic",{"_index":190,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{},"coverage.html":{}}}],["auto",{"_index":312,"title":{},"body":{"components/JokesComponent.html":{}}}],["automat",{"_index":650,"title":{},"body":{"index.html":{}}}],["avail",{"_index":678,"title":{},"body":{"modules.html":{}}}],["back",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"components/ProtectedLayoutComponent.html":{}}}],["bar",{"_index":525,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["bearer",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{}}}],["bodi",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{}}}],["boolean",{"_index":189,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["bootstrap",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["border",{"_index":526,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["brows",{"_index":676,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":167,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":657,"title":{},"body":{"index.html":{}}}],["button",{"_index":12,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{}}}],["calc(100",{"_index":455,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["calc(50",{"_index":513,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["canactiv",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{}}}],["card",{"_index":414,"title":{},"body":{"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["categori",{"_index":246,"title":{},"body":{"interfaces/Joke.html":{}}}],["center",{"_index":319,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["chang",{"_index":652,"title":{},"body":{"index.html":{}}}],["check",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JokesManagementService.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{},"index.html":{}}}],["chuck",{"_index":240,"title":{},"body":{"components/HeaderComponent.html":{}}}],["class",{"_index":34,"title":{"classes/AppPage.html":{}},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":640,"title":{},"body":{"index.html":{}}}],["client",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["cluster_appmodul",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_protectedmodul",{"_index":458,"title":{},"body":{"modules/ProtectedModule.html":{},"overview.html":{}}}],["cluster_protectedmodule_declar",{"_index":459,"title":{},"body":{"modules/ProtectedModule.html":{},"overview.html":{}}}],["cluster_protectedmodule_import",{"_index":460,"title":{},"body":{"modules/ProtectedModule.html":{}}}],["cluster_publicmodul",{"_index":531,"title":{},"body":{"modules/PublicModule.html":{},"overview.html":{}}}],["cluster_publicmodule_declar",{"_index":532,"title":{},"body":{"modules/PublicModule.html":{},"overview.html":{}}}],["cluster_publicmodule_import",{"_index":533,"title":{},"body":{"modules/PublicModule.html":{}}}],["cluster_sharedmodul",{"_index":543,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":544,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":546,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":545,"title":{},"body":{"modules/SharedModule.html":{}}}],["code",{"_index":653,"title":{},"body":{"index.html":{}}}],["column",{"_index":411,"title":{},"body":{"components/LoginComponent.html":{}}}],["commonmodul",{"_index":462,"title":{},"body":{"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{}}}],["complet",{"_index":564,"title":{},"body":{"components/TimerComponent.html":{}}}],["compon",{"_index":83,"title":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/TimerComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["components/jokes/jokes.compon",{"_index":549,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/login/login.compon",{"_index":538,"title":{},"body":{"modules/PublicModule.html":{}}}],["components/publ",{"_index":537,"title":{},"body":{"modules/PublicModule.html":{}}}],["components/timer/timer.compon",{"_index":550,"title":{},"body":{"modules/SharedModule.html":{}}}],["const",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/JokesManagementService.html":{},"modules/MaterialModule.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{}}}],["constructor",{"_index":36,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuardService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["constructor(alert",{"_index":444,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["constructor(apiserivc",{"_index":376,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(apiservic",{"_index":366,"title":{},"body":{"guards/JokesResolverService.html":{}}}],["constructor(auth",{"_index":233,"title":{},"body":{"components/HeaderComponent.html":{}}}],["constructor(jokesmanag",{"_index":257,"title":{},"body":{"components/JokesComponent.html":{}}}],["constructor(priv",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"guards/JokesResolverService.html":{}}}],["constructor(rout",{"_index":472,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["contain",{"_index":313,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["content",{"_index":22,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["context",{"_index":616,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":559,"title":{},"body":{"components/TimerComponent.html":{}}}],["counter",{"_index":485,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["coverag",{"_index":595,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["dashboard",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data.token",{"_index":396,"title":{},"body":{"components/LoginComponent.html":{}}}],["data.user.email",{"_index":402,"title":{},"body":{"components/LoginComponent.html":{}}}],["data.user.firstnam",{"_index":398,"title":{},"body":{"components/LoginComponent.html":{}}}],["data.user.guid",{"_index":404,"title":{},"body":{"components/LoginComponent.html":{}}}],["data.user.lastnam",{"_index":400,"title":{},"body":{"components/LoginComponent.html":{}}}],["declar",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["deep",{"_index":523,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["default",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{},"injectables/TimerManagementService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":15,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["delete_forev",{"_index":305,"title":{},"body":{"components/JokesComponent.html":{}}}],["depend",{"_index":130,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":334,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["dev",{"_index":647,"title":{},"body":{"index.html":{}}}],["develop",{"_index":643,"title":{},"body":{"index.html":{}}}],["direct",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":656,"title":{},"body":{"index.html":{}}}],["directori",{"_index":660,"title":{},"body":{"index.html":{}}}],["dismiss",{"_index":294,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{}}}],["display",{"_index":314,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["dist",{"_index":659,"title":{},"body":{"index.html":{}}}],["document",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["dootherthingiffals",{"_index":342,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["dosomethingiftru",{"_index":341,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["durat",{"_index":13,"title":{},"body":{"injectables/AlertService.html":{}}}],["dynam",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":668,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.t",{"_index":161,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":165,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":164,"title":{},"body":{"classes/AppPage.html":{}}}],["element",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["element(by.css('app",{"_index":168,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":401,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["emit",{"_index":491,"title":{},"body":{"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["emitt",{"_index":490,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["end",{"_index":566,"title":{},"body":{"components/TimerComponent.html":{},"index.html":{}}}],["enough",{"_index":283,"title":{},"body":{"components/JokesComponent.html":{}}}],["environ",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{}}}],["error",{"_index":209,"title":{},"body":{"guards/AuthGuardService.html":{},"components/LoginComponent.html":{}}}],["error.error.err",{"_index":405,"title":{},"body":{"components/LoginComponent.html":{}}}],["error.statustext",{"_index":406,"title":{},"body":{"components/LoginComponent.html":{}}}],["evenli",{"_index":512,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["event",{"_index":489,"title":{},"body":{"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["eventemitt",{"_index":487,"title":{},"body":{"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["exampl",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JokesManagementService.html":{}}}],["execut",{"_index":665,"title":{},"body":{"index.html":{}}}],["exist",{"_index":296,"title":{},"body":{"components/JokesComponent.html":{}}}],["export",{"_index":33,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{},"overview.html":{}}}],["fals",{"_index":212,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/JokesManagementService.html":{},"miscellaneous/variables.html":{}}}],["favorit",{"_index":277,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["favorite_bord",{"_index":301,"title":{},"body":{"components/JokesComponent.html":{}}}],["favoritejok",{"_index":328,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["field",{"_index":416,"title":{},"body":{"components/LoginComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["finalcount",{"_index":561,"title":{},"body":{"components/TimerComponent.html":{}}}],["firstnam",{"_index":397,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["flag",{"_index":484,"title":{},"body":{"components/PublicLayoutComponent.html":{},"index.html":{}}}],["flex",{"_index":315,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["font",{"_index":323,"title":{},"body":{"components/JokesComponent.html":{}}}],["form",{"_index":374,"title":{},"body":{"components/LoginComponent.html":{}}}],["formcontrol",{"_index":383,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":381,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodul",{"_index":539,"title":{},"body":{"modules/PublicModule.html":{}}}],["found",{"_index":432,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found'},{'nam",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["found.compon",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":434,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":433,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.t",{"_index":431,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":436,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":435,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/pag",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["frontmen",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["frontmenangularcli",{"_index":637,"title":{},"body":{"index.html":{}}}],["further",{"_index":669,"title":{},"body":{"index.html":{}}}],["gateway",{"_index":203,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["gener",{"_index":639,"title":{},"body":{"index.html":{}}}],["get",{"_index":636,"title":{"index.html":{}},"body":{}}],["getfavoritejok",{"_index":330,"title":{},"body":{"injectables/JokesManagementService.html":{},"components/PublicLayoutComponent.html":{}}}],["getjokeslength",{"_index":253,"title":{},"body":{"components/JokesComponent.html":{}}}],["getrandomjok",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{},"injectables/JokesManagementService.html":{},"components/PublicLayoutComponent.html":{}}}],["gettitletext",{"_index":162,"title":{},"body":{"classes/AppPage.html":{}}}],["getuserfavoritejok",{"_index":443,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["getuserfavoritejokes(userid",{"_index":446,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["getuserjok",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{}}}],["go",{"_index":672,"title":{},"body":{"index.html":{}}}],["graph",{"_index":677,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":185,"title":{"guards/AuthGuardService.html":{},"guards/JokesResolverService.html":{}},"body":{"guards/AuthGuardService.html":{},"guards/JokesResolverService.html":{},"overview.html":{}}}],["guard.servic",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guard.service.t",{"_index":187,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guard.service.ts:23",{"_index":188,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guid",{"_index":403,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["h1')).gettext",{"_index":169,"title":{},"body":{"classes/AppPage.html":{}}}],["hammerj",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["header",{"_index":80,"title":{},"body":{"injectables/ApiService.html":{},"components/HeaderComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["header'},{'nam",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["header.component.html",{"_index":231,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":230,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercompon",{"_index":112,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":309,"title":{},"body":{"components/JokesComponent.html":{},"components/ProtectedLayoutComponent.html":{}}}],["help",{"_index":670,"title":{},"body":{"index.html":{}}}],["host",{"_index":521,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["html",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["http",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{}}}],["http://localhost:3000",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":649,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpclientmodul",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["id",{"_index":247,"title":{},"body":{"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{}}}],["identifi",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":35,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/JokesManagementService.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["implement",{"_index":196,"title":{},"body":{"guards/AuthGuardService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["import",{"_index":26,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["infavorit",{"_index":360,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["info",{"_index":2,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{}}}],["inject",{"_index":0,"title":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/JokesManagementService.html":{},"injectables/TimerManagementService.html":{}},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"injectables/TimerManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":256,"title":{},"body":{"components/JokesComponent.html":{},"components/TimerComponent.html":{}}}],["interfac",{"_index":244,"title":{"interfaces/Joke.html":{},"interfaces/User.html":{}},"body":{"interfaces/Joke.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces/jok",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{},"injectables/JokesManagementService.html":{}}}],["interfaces/us",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{}}}],["iscount",{"_index":469,"title":{},"body":{"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["isinfavorit",{"_index":254,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{}}}],["isinfavorites(100",{"_index":340,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["isinfavorites(id",{"_index":265,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{}}}],["isinfavorites(joke.id",{"_index":300,"title":{},"body":{"components/JokesComponent.html":{}}}],["isloggedin",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["item",{"_index":318,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["joke",{"_index":59,"title":{"interfaces/Joke.html":{}},"body":{"injectables/ApiService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"coverage.html":{}}}],["joke.id",{"_index":359,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["joke.jok",{"_index":302,"title":{},"body":{"components/JokesComponent.html":{}}}],["jokes'},{'nam",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["jokes.component.html",{"_index":251,"title":{},"body":{"components/JokesComponent.html":{}}}],["jokes.component.scss",{"_index":250,"title":{},"body":{"components/JokesComponent.html":{}}}],["jokescompon",{"_index":114,"title":{"components/JokesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["jokesmanag",{"_index":260,"title":{},"body":{"components/JokesComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["jokesmanagementservic",{"_index":258,"title":{"injectables/JokesManagementService.html":{}},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{}}}],["jokesresolverservic",{"_index":362,"title":{"guards/JokesResolverService.html":{}},"body":{"guards/JokesResolverService.html":{},"modules/PublicModule.html":{}}}],["js",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem('ch_us",{"_index":451,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["json.parse(window.localstorage.getitem('ch_favorite_jok",{"_index":498,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["json.parse(window.localstorage.getitem('ch_user')).token",{"_index":78,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["json.stringifi",{"_index":395,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.stringify(this.getfavoritejok",{"_index":357,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["justifi",{"_index":412,"title":{},"body":{"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["karma",{"_index":667,"title":{},"body":{"index.html":{}}}],["lastnam",{"_index":399,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["layout",{"_index":440,"title":{},"body":{"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["layout'},{'nam",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["layout.compon",{"_index":464,"title":{},"body":{"modules/ProtectedModule.html":{},"modules/PublicModule.html":{}}}],["layout.component.html",{"_index":442,"title":{},"body":{"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["layout.component.scss",{"_index":441,"title":{},"body":{"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["layout.component.t",{"_index":439,"title":{},"body":{"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"coverage.html":{}}}],["layout.component.ts:10",{"_index":445,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["layout.component.ts:14",{"_index":476,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["layout.component.ts:16",{"_index":449,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["layout.component.ts:21",{"_index":447,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["layout.component.ts:27",{"_index":483,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["layout.component.ts:31",{"_index":488,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["layout.component.ts:32",{"_index":481,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["layout.component.ts:41",{"_index":480,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["layout.component.ts:45",{"_index":479,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["layout.component.ts:49",{"_index":482,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["layout.component.ts:54",{"_index":478,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["layout/protect",{"_index":438,"title":{},"body":{"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"coverage.html":{}}}],["layout/publ",{"_index":468,"title":{},"body":{"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"coverage.html":{}}}],["left",{"_index":518,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["legend",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"overview.html":{}}}],["limit",{"_index":292,"title":{},"body":{"components/JokesComponent.html":{}}}],["list",{"_index":285,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/LoginComponent.html":{}}}],["liter",{"_index":594,"title":{},"body":{"interfaces/User.html":{}}}],["loadchildren",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["lock",{"_index":243,"title":{},"body":{"components/HeaderComponent.html":{}}}],["log",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["login",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/PublicModule.html":{}}}],["login'},{'nam",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["login(bodi",{"_index":55,"title":{},"body":{"injectables/ApiService.html":{}}}],["login.component.html",{"_index":373,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":372,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":116,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["loop",{"_index":565,"title":{},"body":{"components/TimerComponent.html":{}}}],["management.servic",{"_index":273,"title":{},"body":{"components/JokesComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["management.service.t",{"_index":327,"title":{},"body":{"injectables/JokesManagementService.html":{},"injectables/TimerManagementService.html":{},"coverage.html":{}}}],["management.service.ts:102",{"_index":343,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["management.service.ts:11",{"_index":351,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["management.service.ts:117",{"_index":338,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["management.service.ts:12",{"_index":589,"title":{},"body":{"injectables/TimerManagementService.html":{}}}],["management.service.ts:16",{"_index":350,"title":{},"body":{"injectables/JokesManagementService.html":{},"injectables/TimerManagementService.html":{}}}],["management.service.ts:32",{"_index":337,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["management.service.ts:46",{"_index":349,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["management.service.ts:59",{"_index":336,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["management.service.ts:6",{"_index":590,"title":{},"body":{"injectables/TimerManagementService.html":{}}}],["management.service.ts:73",{"_index":346,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["management.service.ts:87",{"_index":333,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["margin",{"_index":417,"title":{},"body":{"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["mat",{"_index":413,"title":{},"body":{"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["matbuttonmodul",{"_index":424,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodul",{"_index":422,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":44,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdividermodul",{"_index":425,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["material.modul",{"_index":548,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodul",{"_index":139,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodul",{"_index":428,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["maticonmodul",{"_index":423,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodul",{"_index":429,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressbarmodul",{"_index":426,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":29,"title":{},"body":{"injectables/AlertService.html":{}}}],["matsnackbarmodul",{"_index":427,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodul",{"_index":421,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":291,"title":{},"body":{"components/JokesComponent.html":{}}}],["metadata",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["method",{"_index":7,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["min",{"_index":515,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["miscellan",{"_index":684,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modul",{"_index":128,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":671,"title":{},"body":{"index.html":{}}}],["name",{"_index":19,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"index.html":{}}}],["navig",{"_index":648,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":163,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":201,"title":{},"body":{"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":522,"title":{},"body":{"components/PublicLayoutComponent.html":{},"index.html":{}}}],["ngmodul",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":232,"title":{},"body":{"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["ngzone",{"_index":27,"title":{},"body":{"injectables/AlertService.html":{}}}],["none",{"_index":306,"title":{},"body":{"components/JokesComponent.html":{}}}],["norri",{"_index":241,"title":{},"body":{"components/HeaderComponent.html":{}}}],["null",{"_index":41,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{}}}],["number",{"_index":14,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/TimerComponent.html":{}}}],["object",{"_index":335,"title":{},"body":{"injectables/JokesManagementService.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"guards/JokesResolverService.html":{}}}],["on",{"_index":279,"title":{},"body":{"components/JokesComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["oninit",{"_index":229,"title":{},"body":{"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["onsubmit",{"_index":375,"title":{},"body":{"components/LoginComponent.html":{}}}],["option",{"_index":21,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["out",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":560,"title":{},"body":{"components/TimerComponent.html":{}}}],["over",{"_index":202,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["overflow",{"_index":311,"title":{},"body":{"components/JokesComponent.html":{}}}],["overview",{"_index":679,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":322,"title":{},"body":{"components/JokesComponent.html":{}}}],["packag",{"_index":619,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":307,"title":{},"body":{"components/JokesComponent.html":{}}}],["page",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["pagenotfoundcompon",{"_index":118,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["param",{"_index":352,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["paramet",{"_index":17,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["password",{"_index":385,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["path",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{}}}],["posit",{"_index":519,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["privat",{"_index":37,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuardService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["prod",{"_index":661,"title":{},"body":{"index.html":{}}}],["product",{"_index":662,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":524,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["project",{"_index":638,"title":{},"body":{"index.html":{}}}],["properti",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{}}}],["protect",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["protected/protected.module#protectedmodul",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["protectedlayoutcompon",{"_index":121,"title":{"components/ProtectedLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["protectedmodul",{"_index":457,"title":{"modules/ProtectedModule.html":{}},"body":{"modules/ProtectedModule.html":{},"modules.html":{},"overview.html":{}}}],["protectedrout",{"_index":465,"title":{},"body":{"modules/ProtectedModule.html":{}}}],["protractor",{"_index":166,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provid",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["providedin",{"_index":31,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"injectables/TimerManagementService.html":{}}}],["public",{"_index":8,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["public/public.module#publicmodul",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["publiclayoutcompon",{"_index":124,"title":{"components/PublicLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["publicmodul",{"_index":530,"title":{"modules/PublicModule.html":{}},"body":{"modules/PublicModule.html":{},"modules.html":{},"overview.html":{}}}],["publicrout",{"_index":541,"title":{},"body":{"modules/PublicModule.html":{}}}],["radiu",{"_index":527,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["random",{"_index":303,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/PublicLayoutComponent.html":{}}}],["randomjok",{"_index":329,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["reach",{"_index":293,"title":{},"body":{"components/JokesComponent.html":{}}}],["reactiveformsmodul",{"_index":540,"title":{},"body":{"modules/PublicModule.html":{}}}],["readm",{"_index":673,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["reiniti",{"_index":347,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["reload",{"_index":651,"title":{},"body":{"index.html":{}}}],["remov",{"_index":297,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{}}}],["removefromfavorit",{"_index":255,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{}}}],["removefromfavorites(27",{"_index":344,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["removefromfavorites(id",{"_index":268,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{}}}],["requir",{"_index":410,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res['msg",{"_index":205,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["reset",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resetcountdown",{"_index":556,"title":{},"body":{"components/TimerComponent.html":{}}}],["resolv",{"_index":365,"title":{},"body":{"guards/JokesResolverService.html":{},"modules/PublicModule.html":{}}}],["resolver.servic",{"_index":536,"title":{},"body":{"modules/PublicModule.html":{}}}],["resolver.service.t",{"_index":364,"title":{},"body":{"guards/JokesResolverService.html":{}}}],["resolver.service.ts:10",{"_index":367,"title":{},"body":{"guards/JokesResolverService.html":{}}}],["resolver.service.ts:14",{"_index":368,"title":{},"body":{"guards/JokesResolverService.html":{}}}],["resolvers/jok",{"_index":535,"title":{},"body":{"modules/PublicModule.html":{}}}],["result",{"_index":43,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["root",{"_index":32,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"injectables/TimerManagementService.html":{}}}],["root'},{'nam",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["rout",{"_index":175,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":195,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["routermodul",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{}}}],["routermodule.forchild(protectedrout",{"_index":466,"title":{},"body":{"modules/ProtectedModule.html":{}}}],["routermodule.forchild(publicrout",{"_index":542,"title":{},"body":{"modules/PublicModule.html":{}}}],["routermodule.forroot(rout",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":316,"title":{},"body":{"components/JokesComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["run",{"_index":645,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"guards/JokesResolverService.html":{},"components/TimerComponent.html":{},"dependencies.html":{}}}],["scaffold",{"_index":654,"title":{},"body":{"index.html":{}}}],["selector",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["serv",{"_index":646,"title":{},"body":{"index.html":{}}}],["server",{"_index":644,"title":{},"body":{"index.html":{}}}],["services/alert.servic",{"_index":271,"title":{},"body":{"components/JokesComponent.html":{},"components/TimerComponent.html":{}}}],["services/auth.servic",{"_index":238,"title":{},"body":{"components/HeaderComponent.html":{}}}],["services/jok",{"_index":272,"title":{},"body":{"components/JokesComponent.html":{},"components/TimerComponent.html":{}}}],["services/tim",{"_index":575,"title":{},"body":{"components/TimerComponent.html":{}}}],["setfavoritejok",{"_index":331,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["setfavoritejokes(jok",{"_index":345,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["setrandomjok",{"_index":332,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["setrandomjokes(jok",{"_index":348,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["settimeout",{"_index":39,"title":{},"body":{"injectables/AlertService.html":{}}}],["shared/components/header/header.compon",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/components/pag",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/modules/material.modul",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{}}}],["shared/modules/shared.modul",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{}}}],["shared/services/alert.servic",{"_index":388,"title":{},"body":{"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{}}}],["shared/services/api.servic",{"_index":369,"title":{},"body":{"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["shared/services/auth",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shared/services/auth.servic",{"_index":387,"title":{},"body":{"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["shared/services/jok",{"_index":495,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["shared/services/tim",{"_index":494,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["sharedcompon",{"_index":551,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sharedmodul",{"_index":140,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":9,"title":{},"body":{"injectables/AlertService.html":{},"components/JokesComponent.html":{}}}],["show(cont",{"_index":10,"title":{},"body":{"injectables/AlertService.html":{}}}],["size",{"_index":324,"title":{},"body":{"components/JokesComponent.html":{}}}],["snackbar",{"_index":38,"title":{},"body":{"injectables/AlertService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{},"index.html":{}}}],["space",{"_index":284,"title":{},"body":{"components/JokesComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["spec\\.t",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api.service.t",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.module.t",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.t",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/protected/protect",{"_index":437,"title":{},"body":{"components/ProtectedLayoutComponent.html":{},"coverage.html":{}}}],["src/app/protected/protected.module.t",{"_index":461,"title":{},"body":{"modules/ProtectedModule.html":{}}}],["src/app/public/components/login/login.component.t",{"_index":371,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/public/components/login/login.component.ts:15",{"_index":386,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/public/components/login/login.component.ts:18",{"_index":377,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/public/components/login/login.component.ts:26",{"_index":379,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/public/components/login/login.component.ts:32",{"_index":380,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/public/components/publ",{"_index":467,"title":{},"body":{"components/PublicLayoutComponent.html":{},"coverage.html":{}}}],["src/app/public/public.module.t",{"_index":534,"title":{},"body":{"modules/PublicModule.html":{}}}],["src/app/public/resolvers/jok",{"_index":363,"title":{},"body":{"guards/JokesResolverService.html":{}}}],["src/app/shared/components/header/header.component.t",{"_index":228,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/header/header.component.ts:14",{"_index":237,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:18",{"_index":235,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:22",{"_index":236,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:9",{"_index":234,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/jokes/jokes.component.t",{"_index":249,"title":{},"body":{"components/JokesComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/jokes/jokes.component.ts:12",{"_index":261,"title":{},"body":{"components/JokesComponent.html":{}}}],["src/app/shared/components/jokes/jokes.component.ts:13",{"_index":259,"title":{},"body":{"components/JokesComponent.html":{}}}],["src/app/shared/components/jokes/jokes.component.ts:16",{"_index":270,"title":{},"body":{"components/JokesComponent.html":{}}}],["src/app/shared/components/jokes/jokes.component.ts:19",{"_index":267,"title":{},"body":{"components/JokesComponent.html":{}}}],["src/app/shared/components/jokes/jokes.component.ts:23",{"_index":266,"title":{},"body":{"components/JokesComponent.html":{}}}],["src/app/shared/components/jokes/jokes.component.ts:27",{"_index":263,"title":{},"body":{"components/JokesComponent.html":{}}}],["src/app/shared/components/jokes/jokes.component.ts:43",{"_index":269,"title":{},"body":{"components/JokesComponent.html":{}}}],["src/app/shared/components/jokes/jokes.component.ts:47",{"_index":264,"title":{},"body":{"components/JokesComponent.html":{}}}],["src/app/shared/components/pag",{"_index":430,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/timer/timer.component.t",{"_index":552,"title":{},"body":{"components/TimerComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/timer/timer.component.ts:19",{"_index":563,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/shared/components/timer/timer.component.ts:23",{"_index":567,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/shared/components/timer/timer.component.ts:33",{"_index":572,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/shared/components/timer/timer.component.ts:34",{"_index":574,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/shared/components/timer/timer.component.ts:37",{"_index":568,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/shared/components/timer/timer.component.ts:44",{"_index":570,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/shared/components/timer/timer.component.ts:59",{"_index":569,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/shared/components/timer/timer.component.ts:65",{"_index":571,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/shared/interfaces/jok",{"_index":274,"title":{},"body":{"components/JokesComponent.html":{},"guards/JokesResolverService.html":{},"components/PublicLayoutComponent.html":{}}}],["src/app/shared/interfaces/joke.t",{"_index":245,"title":{},"body":{"interfaces/Joke.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/us",{"_index":391,"title":{},"body":{"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{}}}],["src/app/shared/interfaces/user.t",{"_index":593,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/shared/modules/material.module.t",{"_index":420,"title":{},"body":{"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/modules/shared.module.t",{"_index":547,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/services/alert.service.t",{"_index":5,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/app/shared/services/alert.service.ts:15",{"_index":16,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/shared/services/api.service.t",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/services/api.service.ts:20",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/services/api.service.ts:24",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/services/api.service.ts:28",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/services/api.service.ts:33",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/services/api.service.ts:38",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/services/auth",{"_index":186,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["src/app/shared/services/auth.service.t",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/shared/services/auth.service.ts:24",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:41",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/jok",{"_index":326,"title":{},"body":{"injectables/JokesManagementService.html":{},"coverage.html":{}}}],["src/app/shared/services/tim",{"_index":586,"title":{},"body":{"injectables/TimerManagementService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":613,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":614,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":615,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":562,"title":{"index.html":{}},"body":{"components/TimerComponent.html":{}}}],["startcount",{"_index":587,"title":{},"body":{"injectables/TimerManagementService.html":{}}}],["startcountdown",{"_index":557,"title":{},"body":{"components/TimerComponent.html":{}}}],["state",{"_index":493,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["statement",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["still",{"_index":282,"title":{},"body":{"components/JokesComponent.html":{}}}],["stopcount",{"_index":588,"title":{},"body":{"injectables/TimerManagementService.html":{}}}],["stopcountdown",{"_index":558,"title":{},"body":{"components/TimerComponent.html":{}}}],["store",{"_index":408,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["storedjok",{"_index":497,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["string",{"_index":11,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"interfaces/User.html":{}}}],["style",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["styleurl",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["subject",{"_index":194,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["subject.complet",{"_index":211,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["subject.next(fals",{"_index":207,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["subject.next(tru",{"_index":206,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["subscript",{"_index":573,"title":{},"body":{"components/TimerComponent.html":{}}}],["support",{"_index":674,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":675,"title":{},"body":{"modules.html":{}}}],["t",{"_index":584,"title":{},"body":{"components/TimerComponent.html":{}}}],["tabl",{"_index":618,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["templateurl",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["test",{"_index":664,"title":{},"body":{"index.html":{}}}],["there'",{"_index":281,"title":{},"body":{"components/JokesComponent.html":{}}}],["this.alert.show",{"_index":290,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{}}}],["this.alert.show(`welcom",{"_index":452,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["this.alert.show(error.error.err",{"_index":210,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.api.verify().subscribe((r",{"_index":204,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.apiserivce.login(this.form.value).subscribe((data",{"_index":393,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.getrandomjok",{"_index":370,"title":{},"body":{"guards/JokesResolverService.html":{}}}],["this.apiservice.getrandomjoke().subscribe((jok",{"_index":506,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.auth.isloggedin",{"_index":200,"title":{},"body":{"guards/AuthGuardService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["this.auth.logout",{"_index":239,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.count",{"_index":583,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.favoritejok",{"_index":354,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["this.favoritejokes.find((jok",{"_index":361,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["this.favoritejokes.push(jok",{"_index":355,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["this.http.get(`${api_url}/login/verifi",{"_index":79,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get>(`${api_url}/jok",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get>(`${api_url}/jokes/1",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(`${api_url}/login",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.iscount",{"_index":503,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.iscounting.emit(fals",{"_index":592,"title":{},"body":{"injectables/TimerManagementService.html":{}}}],["this.iscounting.emit(tru",{"_index":591,"title":{},"body":{"injectables/TimerManagementService.html":{}}}],["this.isinfavorites(joke.id",{"_index":280,"title":{},"body":{"components/JokesComponent.html":{}}}],["this.jokesmanagement.addtofavorites(jok",{"_index":288,"title":{},"body":{"components/JokesComponent.html":{}}}],["this.jokesmanagement.addtofavorites(joke.data[0",{"_index":508,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.jokesmanagement.getfavoritejok",{"_index":502,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.jokesmanagement.getfavoritejokes().length",{"_index":286,"title":{},"body":{"components/JokesComponent.html":{},"components/TimerComponent.html":{}}}],["this.jokesmanagement.getrandomjok",{"_index":501,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.jokesmanagement.isinfavorites(id",{"_index":275,"title":{},"body":{"components/JokesComponent.html":{}}}],["this.jokesmanagement.isinfavorites(joke.data[0].id",{"_index":507,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.jokesmanagement.removefromfavorites(id",{"_index":299,"title":{},"body":{"components/JokesComponent.html":{}}}],["this.jokesmanagement.removefromfavorites(joke.id",{"_index":298,"title":{},"body":{"components/JokesComponent.html":{}}}],["this.jokesmanagement.setfavoritejok",{"_index":500,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.jokesmanagement.setfavoritejokes(storedjok",{"_index":499,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.jokesmanagement.setrandomjokes(this.route.snapshot.data.jokes.data",{"_index":496,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.randomjok",{"_index":353,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["this.router.navig",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['dashboard",{"_index":392,"title":{},"body":{"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["this.router.navigate(['login",{"_index":208,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.setfavoritejokes([...this.favoritejokes.filter((jok",{"_index":358,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["this.snackbar.open(cont",{"_index":40,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.startcountdown",{"_index":576,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.stopcountdown",{"_index":578,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.tim",{"_index":582,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timermanagement.iscounting.subscribe((iscount",{"_index":577,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timermanagement.startcount",{"_index":504,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.timermanagement.stopcount",{"_index":505,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.timersubscript",{"_index":579,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.togglecount",{"_index":509,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["timer",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["timer(0",{"_index":580,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer.component.html",{"_index":554,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer.component.scss",{"_index":553,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer_off",{"_index":510,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["timercompon",{"_index":125,"title":{"components/TimerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["timermanag",{"_index":474,"title":{},"body":{"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["timermanagementservic",{"_index":475,"title":{"injectables/TimerManagementService.html":{}},"body":{"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"coverage.html":{}}}],["timersubscript",{"_index":555,"title":{},"body":{"components/TimerComponent.html":{}}}],["titl",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["toggl",{"_index":492,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["togglecount",{"_index":470,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["token",{"_index":77,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["top",{"_index":418,"title":{},"body":{"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["tree",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["true",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JokesManagementService.html":{},"components/PublicLayoutComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":20,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":663,"title":{},"body":{"index.html":{}}}],["unqiu",{"_index":278,"title":{},"body":{"components/JokesComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["us",{"_index":655,"title":{},"body":{"index.html":{}}}],["user",{"_index":66,"title":{"interfaces/User.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["userdata",{"_index":450,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["userdata.user.firstnam",{"_index":453,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["userdata.user.lastnam",{"_index":454,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["userid",{"_index":448,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["usernam",{"_index":382,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["username/email",{"_index":409,"title":{},"body":{"components/LoginComponent.html":{}}}],["valid",{"_index":389,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.requir",{"_index":384,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["variabl",{"_index":606,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["verifi",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{}}}],["version",{"_index":641,"title":{},"body":{"index.html":{}}}],["via",{"_index":666,"title":{},"body":{"index.html":{}}}],["view",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["void",{"_index":25,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["warn",{"_index":289,"title":{},"body":{"components/JokesComponent.html":{}}}],["whether",{"_index":339,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["width",{"_index":320,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["window.localstorage.clear",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["window.localstorage.getitem('ch_us",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["window.localstorage.setitem('ch_favorite_jok",{"_index":356,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["window.localstorage.setitem('ch_us",{"_index":394,"title":{},"body":{"components/LoginComponent.html":{}}}],["work",{"_index":486,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["wrap",{"_index":511,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["x1f625",{"_index":304,"title":{},"body":{"components/JokesComponent.html":{}}}],["ye",{"_index":23,"title":{},"body":{"injectables/AlertService.html":{}}}],["zone.j",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/alert.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(content: string, button?: string, duration?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/alert.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        content\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        button\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        duration\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n    /**\n   * @ignore\n   */\n  constructor(\n    private snackbar: MatSnackBar\n  ) { }\n\n  public show(content: string, button?: string, duration?: number) {\n    setTimeout(() => {\n      this.snackbar.open(content, button ? button : null, {duration: duration ? duration : 3000});\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/api.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getRandomJoke\n                            \n                            \n                                    Public\n                                getRandomJokes\n                            \n                            \n                                    Public\n                                getUserJokes\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getRandomJoke\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRandomJoke()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/api.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getRandomJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRandomJokes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/api.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable>\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUserJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUserJokes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/api.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login(body)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/api.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            verify\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        verify()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/api.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Joke } from './../interfaces/joke';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../interfaces/user';\n\nconst API_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n    /**\n   * @ignore\n   */\n  constructor(private http: HttpClient) { }\n\n  public getRandomJokes(): Observable> {\n    return this.http.get>(`${API_URL}/jokes`);\n  }\n\n  public getRandomJoke(): Observable {\n    return this.http.get>(`${API_URL}/jokes/1`);\n  }\n\n  public login(body): Observable {\n    return this.http.post(`${API_URL}/login`, body);\n  }\n\n  // Verify logged in user token\n  public verify() {\n    const token = JSON.parse(window.localStorage.getItem('CH_user')).token;\n    return this.http.get(`${API_URL}/login/verify`, {headers: {Authorization: `Bearer ${token}`} });\n  }\n\n  public getUserJokes() {\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'frontmen-angular-client'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontmen-angular-client';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'JokesComponent', 'selector': 'app-jokes'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProtectedLayoutComponent', 'selector': 'app-protected-layout'},{'name': 'PublicLayoutComponent', 'selector': 'app-public-layout'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SharedModule } from './shared/modules/shared.module';\nimport { MaterialModule } from './shared/modules/material.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './shared/components/header/header.component';\nimport { PageNotFoundComponent } from './shared/components/page-not-found/page-not-found.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    SharedModule\n  ],\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    PageNotFoundComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTitleText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTitleText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getTitleText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { AuthGuardService } from './shared/services/auth-guard.service';\nimport { PageNotFoundComponent } from './shared/components/page-not-found/page-not-found.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: './public/public.module#PublicModule'\n  },\n  {\n    path: 'dashboard',\n    loadChildren: './protected/protected.module#ProtectedModule',\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardService.html":{"url":"guards/AuthGuardService.html","title":"guard - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/services/auth-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/auth-guard.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable | boolean\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { AuthService } from './auth.service';\nimport { ApiService } from './api.service';\nimport { AlertService } from './alert.service';\nimport { Observable, Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n    /**\n   * @ignore\n   */\n  constructor(\n    public router: Router,\n    private alert: AlertService,\n    private api: ApiService,\n    private auth: AuthService\n\n    ) { }\n\n  canActivate(): Observable | boolean {\n    if (this.auth.isLoggedIn()) {\n      const subject = new Subject();\n      // Verify token over the gateway\n      this.api.verify().subscribe((res) => {\n        if (res['msg'] === 'Authorized') {\n          subject.next(true);\n        } else {\n          subject.next(false);\n          this.router.navigate(['login']);\n        }\n      }, (error) => {\n        this.alert.show(error.error.err);\n        subject.next(false);\n        this.router.navigate(['login']);\n      }, () => {\n        subject.complete();\n      });\n      return subject;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/auth.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Check if the user is logged in\n\n\n                            \n                                    Example :\n                                        \n                                            isLoggedIn();\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/auth.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Log the user out of the application and redirect back to public view.\n\n\n                            \n                                    Example :\n                                        \n                                            logout();\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class AuthService {\n      /**\n   * @ignore\n   */\n  constructor(private router: Router) { }\n\n  /**\n* Check if the user is logged in\n*\n* @example\n*\n* isLoggedIn();\n*\n* @returns {boolean}\n*/\n  isLoggedIn(): boolean {\n    if (window.localStorage.getItem('CH_user') && JSON.parse(window.localStorage.getItem('CH_user')).token) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n/**\n* Log the user out of the application and redirect back to public view.\n*\n* @example\n*\n* logout();\n*\n* @returns {void}\n*/\n  logout() {\n    window.localStorage.clear();\n    this.router.navigate(['']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/header/header.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/header/header.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/header/header.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/header/header.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  constructor(\n    private auth: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n\n  isLoggedIn(): boolean {\n    return this.auth.isLoggedIn();\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    Chuck Norris Jokes\n\n    \n    \n      \n          \n            account_circle\n             Login\n          \n      \n      \n          \n            lock\n             Logout\n          \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Chuck Norris Jokes                                    account_circle             Login                                            lock             Logout                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'JokesComponent', 'selector': 'app-jokes'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProtectedLayoutComponent', 'selector': 'app-protected-layout'},{'name': 'PublicLayoutComponent', 'selector': 'app-public-layout'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Joke.html":{"url":"interfaces/Joke.html","title":"interface - Joke","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Joke\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/joke.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        categories\n                                \n                                \n                                        id\n                                \n                                \n                                        joke\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        joke\n                                    \n                                \n                                \n                                    \n                                        joke:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Joke {\n  id: number;\n  joke: string;\n  categories?: Array;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JokesComponent.html":{"url":"components/JokesComponent.html","title":"component - JokesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  JokesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/jokes/jokes.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-jokes\n            \n\n            \n                styleUrls\n                ./jokes.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./jokes.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alert\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToFavorites\n                            \n                            \n                                getJokesLength\n                            \n                            \n                                isInFavorites\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeFromFavorites\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                jokes\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jokesManagement: JokesManagementService, alert: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/jokes/jokes.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jokesManagement\n                                                  \n                                                        \n                                                                    JokesManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alert\n                                                  \n                                                        \n                                                                    AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        jokes\n                    \n                    \n                            \n                            Type :    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/jokes/jokes.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/jokes/jokes.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addToFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \naddToFavorites(joke)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/jokes/jokes.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        joke\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getJokesLength\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetJokesLength()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/jokes/jokes.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isInFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \nisInFavorites(id)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/jokes/jokes.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/jokes/jokes.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeFromFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveFromFavorites(id)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/jokes/jokes.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alert\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alert:     AlertService\n\n                    \n                \n                    \n                        \n                            Type :     AlertService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/jokes/jokes.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AlertService } from './../../services/alert.service';\nimport { JokesManagementService } from './../../services/jokes-management.service';\nimport { Joke } from 'src/app/shared/interfaces/joke';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-jokes',\n  templateUrl: './jokes.component.html',\n  styleUrls: ['./jokes.component.scss']\n})\nexport class JokesComponent implements OnInit {\n  @Input() jokes: Array;\n  @Input() type: string;\n  constructor(\n    private jokesManagement: JokesManagementService,\n    public alert: AlertService\n    ) { }\n\n  ngOnInit() {\n\n  }\n\n  isInFavorites(id): boolean {\n    return this.jokesManagement.isInFavorites(id);\n  }\n\n  addToFavorites(joke) {\n    // Add joke to favorites, if it is unqiue one.\n    if (!this.isInFavorites(joke.id)) {\n      // Add joke to favorites, if there's still enough space in favorite list.\n      if (this.jokesManagement.getFavoriteJokes().length !== 10) {\n        this.jokesManagement.addToFavorites(joke);\n      } else {\n        // If no enough space, show warnning to user.\n        this.alert.show('⚠️ Favorite list max limit reached', 'Dismiss');\n      }\n    } else {\n      // If joke already exists in favorite list, remove it.\n      this.jokesManagement.removeFromFavorites(joke.id);\n    }\n  }\n\n  removeFromFavorites(id) {\n    this.jokesManagement.removeFromFavorites(id)\n  }\n\n  getJokesLength(): number {\n    return this.jokesManagement.getFavoriteJokes().length;\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n          \n              {{isInFavorites(joke.id) ? 'favorite' : 'favorite_border'}}\n          \n          {{joke.joke}}\n      \n      \n    \n    No random jokes yet &#x1F625;\n\n\n\n    \n      \n          \n              delete_forever\n          \n          {{joke.joke}}\n      \n      \n    \n    No favorite jokes yet &#x1F625;\n\n\n    \n\n    \n                \n                    ./jokes.component.scss\n                \n                .random-jokes-list, .favorite-jokes-list{\n  list-style: none;\n  padding: 0;\n  max-height: 400px;\n  overflow: auto;\n  .joke-container{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n\n    p{\n      font-size: 14px;\n    }\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{isInFavorites(joke.id) ? \\'favorite\\' : \\'favorite_border\\'}}                    {{joke.joke}}                    No random jokes yet 😥                                  delete_forever                    {{joke.joke}}                    No favorite jokes yet 😥'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'JokesComponent', 'selector': 'app-jokes'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProtectedLayoutComponent', 'selector': 'app-protected-layout'},{'name': 'PublicLayoutComponent', 'selector': 'app-public-layout'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JokesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JokesManagementService.html":{"url":"injectables/JokesManagementService.html","title":"injectable - JokesManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JokesManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/jokes-management.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                favoriteJokes\n                            \n                            \n                                randomJokes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToFavorites\n                            \n                            \n                                getFavoriteJokes\n                            \n                            \n                                getRandomJokes\n                            \n                            \n                                isInFavorites\n                            \n                            \n                                removeFromFavorites\n                            \n                            \n                                setFavoriteJokes\n                            \n                            \n                                setRandomJokes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addToFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \naddToFavorites(joke: Joke)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:87\n                            \n                        \n\n\n                \n                    \n                            Add joke to favorite list\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        joke\n                                                        \n                                                                    Joke\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Joke Object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            addToFavorites(joke: Joke);\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFavoriteJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFavoriteJokes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Return favorite jokes array\n\n\n                            \n                                    Example :\n                                        \n                                            getFavoriteJokes();\n                                        \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRandomJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRandomJokes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Return random jokes array\n\n\n                            \n                                    Example :\n                                        \n                                            getRandomJokes();\n                                        \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isInFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \nisInFavorites(id)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:117\n                            \n                        \n\n\n                \n                    \n                            Check whether a joke is in favorites list or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Joke ID\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            isInFavorites(100) ? doSomethingIfTrue() : doOtherthingIfFalse();\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeFromFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveFromFavorites(id)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:102\n                            \n                        \n\n\n                \n                    \n                            Remove joke from favorite list\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Joke ID\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            removeFromFavorites(27);\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setFavoriteJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetFavoriteJokes(jokes: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:73\n                            \n                        \n\n\n                \n                    \n                            Reinitiate the array of favorite jokes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jokes\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of Jokes\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            setFavoriteJokes(jokes);\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setRandomJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetRandomJokes(jokes: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Reinitiate the array of random jokes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jokes\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of Jokes\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            setRandomJokes(jokes);\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            favoriteJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        favoriteJokes:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:16\n                            \n                        \n\n                \n                    \n                        Array of favorite Jokes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            randomJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        randomJokes:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:11\n                            \n                        \n\n                \n                    \n                        Array of random Jokes\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Joke } from './../interfaces/joke';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JokesManagementService {\n  /**\n    Array of random Jokes\n  */\n  randomJokes: Array;\n\n  /**\n  Array of favorite Jokes\n  */\n  favoriteJokes: Array;\n    /**\n   * @ignore\n   */\n  constructor() { }\n\n/**\n* Return random jokes array\n*\n* @example\n*\n* getRandomJokes();\n*\n* @param {object} joke Joke Object\n* @returns {Array}\n*/\n  getRandomJokes(): Array {\n    return this.randomJokes;\n  }\n\n/**\n* Reinitiate the array of random jokes\n*\n* @example\n*\n* setRandomJokes(jokes);\n*\n* @param {Array} jokes Array of Jokes\n* @returns {void}\n*/\n  setRandomJokes(jokes: Array) {\n    this.randomJokes = [...jokes];\n  }\n\n  /**\n* Return favorite jokes array\n*\n* @example\n*\n* getFavoriteJokes();\n*\n* @returns {Array}\n*/\n  getFavoriteJokes(): Array {\n    return this.favoriteJokes;\n  }\n\n  /**\n* Reinitiate the array of favorite jokes\n*\n* @example\n*\n* setFavoriteJokes(jokes);\n*\n* @param {Array} jokes Array of Jokes\n* @returns {void}\n*/\n  setFavoriteJokes(jokes: Array) {\n    this.favoriteJokes = [...jokes];\n  }\n\n  /**\n* Add joke to favorite list\n*\n* @example\n*\n* addToFavorites(joke: Joke);\n*\n* @param {object} joke Joke Object\n* @returns {void}\n*/\n  addToFavorites(joke: Joke) {\n    this.favoriteJokes.push(joke);\n    window.localStorage.setItem('CH_favorite_jokes', JSON.stringify(this.getFavoriteJokes()))\n  }\n\n/**\n* Remove joke from favorite list\n*\n* @example\n*\n* removeFromFavorites(27);\n*\n* @param {number} id Joke ID\n* @returns {void}\n*/\n  removeFromFavorites(id): void {\n    this.setFavoriteJokes([...this.favoriteJokes.filter((joke) => joke.id !== id)]);\n    window.localStorage.setItem('CH_favorite_jokes', JSON.stringify(this.getFavoriteJokes()));\n  }\n\n/**\n* Check whether a joke is in favorites list or not\n*\n* @example\n*\n* isInFavorites(100) ? doSomethingIfTrue() : doOtherthingIfFalse();\n*\n* @param {number} id Joke ID\n* @returns {boolean}\n*/\n  isInFavorites(id): boolean {\n    const inFavorites = this.favoriteJokes.find((joke) => {\n      return joke.id === id;\n    });\n    return inFavorites ? true : false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JokesResolverService.html":{"url":"guards/JokesResolverService.html","title":"guard - JokesResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    JokesResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/public/resolvers/jokes-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/public/resolvers/jokes-resolver.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/public/resolvers/jokes-resolver.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable>\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { ApiService } from './../../shared/services/api.service';\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Joke } from 'src/app/shared/interfaces/joke';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JokesResolverService implements Resolve {\n\n  constructor(private apiService: ApiService) { }\n\n  resolve(): Observable> {\n    return this.apiService.getRandomJokes();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/public/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiSerivce: ApiService, alert: AlertService, router: Router, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/public/components/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiSerivce\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alert\n                                                  \n                                                        \n                                                                    AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/public/components/login/login.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/public/components/login/login.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     \n\n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/public/components/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AuthService } from './../../../shared/services/auth.service';\nimport { AlertService } from './../../../shared/services/alert.service';\nimport { ApiService } from './../../../shared/services/api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { User } from 'src/app/shared/interfaces/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  form = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  });\n  constructor(\n    private apiSerivce: ApiService,\n    private alert: AlertService,\n    private router: Router,\n    private auth: AuthService\n    ) { }\n\n  ngOnInit() {\n    if (this.auth.isLoggedIn()) {\n      this.router.navigate(['dashboard']);\n    }\n  }\n\n  onSubmit() {\n    this.apiSerivce.login(this.form.value).subscribe((data: User) => {\n      window.localStorage.clear();\n      window.localStorage.setItem('CH_user', JSON.stringify({\n        token:  data.token,\n        user: {\n            firstname: data.user.firstname,\n            lastname: data.user.lastname,\n            email: data.user.email,\n            guid: data.user.guid,\n          }\n        })\n      );\n      this.router.navigate(['dashboard']);\n    }, (error) => {\n      this.alert.show(`⚠️ ${error.error.err || error.statusText}`, 'Dismiss', null);\n    });\n  }\n\n}\n\n    \n\n    \n        \n  Login to your account to check your stored favorite list.\n  \n    \n      \n        Username/Email\n        \n        \n          Username/Email is required\n        \n      \n\n      \n        Password\n        \n        \n          Password is required\n        \n      \n\n      Login\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .login-container{\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  mat-card{\n    width: 30%;\n\n    form{\n      display: flex;\n      flex-direction: column;\n      mat-form-field{\n        margin-top: 10px;\n      }\n      button{\n        margin: 10px 0;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Login to your account to check your stored favorite list.                    Username/Email                          Username/Email is required                            Password                          Password is required                    Login      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'JokesComponent', 'selector': 'app-jokes'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProtectedLayoutComponent', 'selector': 'app-protected-layout'},{'name': 'PublicLayoutComponent', 'selector': 'app-public-layout'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/modules/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n  MatToolbarModule,\n  MatCardModule,\n  MatIconModule,\n  MatButtonModule,\n  MatDividerModule,\n  MatProgressBarModule,\n  MatSnackBarModule,\n  MatFormFieldModule,\n  MatInputModule\n} from '@angular/material';\n\nconst materialModules = [\n  MatToolbarModule,\n  MatCardModule,\n  MatIconModule,\n  MatButtonModule,\n  MatDividerModule,\n  MatProgressBarModule,\n  MatSnackBarModule,\n  MatFormFieldModule,\n  MatInputModule\n];\n\n@NgModule({\n  imports: [materialModules],\n  exports: [materialModules]\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/page-not-found/page-not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/page-not-found/page-not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/page-not-found/page-not-found.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        Page not found\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Page not found'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'JokesComponent', 'selector': 'app-jokes'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProtectedLayoutComponent', 'selector': 'app-protected-layout'},{'name': 'PublicLayoutComponent', 'selector': 'app-public-layout'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProtectedLayoutComponent.html":{"url":"components/ProtectedLayoutComponent.html","title":"component - ProtectedLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProtectedLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/protected/protected-layout/protected-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-protected-layout\n            \n\n            \n                styleUrls\n                ./protected-layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./protected-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserFavoriteJokes\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alert: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/protected/protected-layout/protected-layout.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alert\n                                                  \n                                                        \n                                                                    AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserFavoriteJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserFavoriteJokes(userId)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/protected/protected-layout/protected-layout.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/protected/protected-layout/protected-layout.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { AlertService } from './../../shared/services/alert.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/shared/interfaces/user';\n\n@Component({\n  selector: 'app-protected-layout',\n  templateUrl: './protected-layout.component.html',\n  styleUrls: ['./protected-layout.component.scss']\n})\nexport class ProtectedLayoutComponent implements OnInit {\n\n  constructor(\n    private alert: AlertService\n  ) { }\n\n  ngOnInit() {\n    const userData: User = JSON.parse(localStorage.getItem('CH_user'));\n    this.alert.show(`Welcome back ${userData.user.firstname} ${userData.user.lastname}`);\n  }\n\n  getUserFavoriteJokes(userId) {\n    return [];\n  }\n}\n\n    \n\n    \n        \n    \n      \n        Your Favorites Jokes\n      \n      \n          \n        \n    \n\n\n    \n\n    \n                \n                    ./protected-layout.component.scss\n                \n                .protected-layout-container{\n  display: flex;\n    justify-content: center;\n    align-items: center;\n    height: calc(100% - 64px);\n\n    .favorites-jokes-card{\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Your Favorites Jokes                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'JokesComponent', 'selector': 'app-jokes'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProtectedLayoutComponent', 'selector': 'app-protected-layout'},{'name': 'PublicLayoutComponent', 'selector': 'app-public-layout'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProtectedLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProtectedModule.html":{"url":"modules/ProtectedModule.html","title":"module - ProtectedModule","body":"\n                   \n\n\n\n\n    Modules\n    ProtectedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProtectedModule\n\n\n\ncluster_ProtectedModule_declarations\n\n\n\ncluster_ProtectedModule_imports\n\n\n\n\nProtectedLayoutComponent\n\nProtectedLayoutComponent\n\n\n\nProtectedModule\n\nProtectedModule\n\nProtectedModule -->\n\nProtectedLayoutComponent->ProtectedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nProtectedModule -->\n\nMaterialModule->ProtectedModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProtectedModule -->\n\nSharedModule->ProtectedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/protected/protected.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProtectedLayoutComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MaterialModule } from './../shared/modules/material.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProtectedLayoutComponent } from './protected-layout/protected-layout.component'\nimport { SharedModule } from '../shared/modules/shared.module';\n\nconst protectedRoutes: Routes = [\n  {\n    path: '',\n    component: ProtectedLayoutComponent\n  }\n];\n\n@NgModule({\n  declarations: [ProtectedLayoutComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(protectedRoutes),\n    MaterialModule,\n    SharedModule\n  ]\n})\nexport class ProtectedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PublicLayoutComponent.html":{"url":"components/PublicLayoutComponent.html","title":"component - PublicLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PublicLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/public/components/public-layout/public-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-public-layout\n            \n\n            \n                styleUrls\n                ./public-layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./public-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isCounting\n                            \n                            \n                                toggleCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addJoke\n                            \n                            \n                                getFavoriteJokes\n                            \n                            \n                                getRandomJokes\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleCounting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, jokesManagement: JokesManagementService, timerManagement: TimerManagementService, apiService: ApiService, auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/public/components/public-layout/public-layout.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jokesManagement\n                                                  \n                                                        \n                                                                    JokesManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timerManagement\n                                                  \n                                                        \n                                                                    TimerManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addJoke\n                            \n                            \n                        \n                    \n                \n                \n                    \naddJoke(isCounting)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/public/components/public-layout/public-layout.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isCounting\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFavoriteJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFavoriteJokes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/public/components/public-layout/public-layout.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Array\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRandomJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRandomJokes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/public/components/public-layout/public-layout.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Array\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/public/components/public-layout/public-layout.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleCounting\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleCounting()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/public/components/public-layout/public-layout.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCounting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isCounting:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/public/components/public-layout/public-layout.component.ts:27\n                            \n                        \n\n                \n                    \n                        Boolean flag to check if the counter is working or not. Default is true.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toggleCount:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/public/components/public-layout/public-layout.component.ts:31\n                            \n                        \n\n                \n                    \n                        Event emitter that emits boolean value to toggle timer state\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { AuthService } from './../../../shared/services/auth.service';\nimport { ApiService } from './../../../shared/services/api.service';\nimport { TimerManagementService } from './../../../shared/services/timer-management.service';\nimport { JokesManagementService } from './../../../shared/services/jokes-management.service';\nimport { Joke } from 'src/app/shared/interfaces/joke';\nimport { Component, OnInit, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-public-layout',\n  templateUrl: './public-layout.component.html',\n  styleUrls: ['./public-layout.component.scss']\n})\nexport class PublicLayoutComponent implements OnInit {\n  constructor(\n    private route: ActivatedRoute,\n    private jokesManagement: JokesManagementService,\n    private timerManagement: TimerManagementService,\n    private apiService: ApiService,\n    private auth: AuthService,\n    private router: Router\n  ) { }\n\n  /**\n  Boolean flag to check if the counter is working or not. Default is true.\n  */\n  isCounting = true;\n  /**\n  Event emitter that emits boolean value to toggle timer state\n  */\n  toggleCount = new EventEmitter();\n  ngOnInit() {\n    this.jokesManagement.setRandomJokes(this.route.snapshot.data.jokes.data);\n    const storedJokes = JSON.parse(window.localStorage.getItem('CH_favorite_jokes'));\n    storedJokes ? this.jokesManagement.setFavoriteJokes(storedJokes) : this.jokesManagement.setFavoriteJokes([]);\n    if (this.auth.isLoggedIn()) {\n      this.router.navigate(['dashboard']);\n    }\n  }\n\n  getRandomJokes(): Array {\n    return this.jokesManagement.getRandomJokes();\n  }\n\n  getFavoriteJokes(): Array {\n    return this.jokesManagement.getFavoriteJokes();\n  }\n\n  toggleCounting() {\n    this.isCounting = !this.isCounting;\n    this.isCounting ? this.timerManagement.startCounting() : this.timerManagement.stopCounting();\n  }\n\n  addJoke(isCounting) {\n    if (isCounting) {\n      this.apiService.getRandomJoke().subscribe((joke) => {\n        // Add joke to favorites, only if it is unqiue one.\n        if (!this.jokesManagement.isInFavorites(joke.data[0].id)) {\n          this.jokesManagement.addToFavorites(joke.data[0]);\n        }\n      });\n    } else {\n      this.toggleCounting();\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Random Jokes\n      \n      \n        \n      \n    \n  \n  \n    \n        \n      \n        Favorites Jokes\n        \n        \n            {{isCounting ? 'timer' : 'timer_off'}}\n        \n      \n      \n          \n        \n    \n  \n\n\n    \n\n    \n                \n                    ./public-layout.component.scss\n                \n                .public-layout-container{\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n\n    .public-jokes-container, .favorites-jokes-container{\n      width: calc(50% - 40px);\n      min-width: 300px;\n      margin: 20px;\n    }\n\n    .favorites-jokes-container{\n      app-timer{\n        margin: 0;\n        top: 0;\n        left: 0;\n        width: 100%;\n        position: absolute;\n      }\n\n      .favorites-jokes-card{\n        mat-card-header{\n          align-items: center;\n\n          mat-card-title{\n            margin: 0;\n          }\n        }\n      }\n    }\n}\n\n:host ::ng-deep{\n  .mat-progress-bar{\n    border-radius: 4px 4px 0 0!important;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Random Jokes                                                            Favorites Jokes                            {{isCounting ? \\'timer\\' : \\'timer_off\\'}}                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'JokesComponent', 'selector': 'app-jokes'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProtectedLayoutComponent', 'selector': 'app-protected-layout'},{'name': 'PublicLayoutComponent', 'selector': 'app-public-layout'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PublicLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PublicModule.html":{"url":"modules/PublicModule.html","title":"module - PublicModule","body":"\n                   \n\n\n\n\n    Modules\n    PublicModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PublicModule\n\n\n\ncluster_PublicModule_declarations\n\n\n\ncluster_PublicModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nPublicModule\n\nPublicModule\n\nPublicModule -->\n\nLoginComponent->PublicModule\n\n\n\n\n\nPublicLayoutComponent\n\nPublicLayoutComponent\n\nPublicModule -->\n\nPublicLayoutComponent->PublicModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nPublicModule -->\n\nMaterialModule->PublicModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPublicModule -->\n\nSharedModule->PublicModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/public/public.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            PublicLayoutComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MaterialModule } from './../shared/modules/material.module';\nimport { JokesResolverService } from './resolvers/jokes-resolver.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PublicLayoutComponent } from './components/public-layout/public-layout.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/modules/shared.module';\n\nconst publicRoutes: Routes = [\n  {\n    path: '',\n    component: PublicLayoutComponent,\n    resolve: {\n      jokes: JokesResolverService\n    }\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  declarations: [PublicLayoutComponent, LoginComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(publicRoutes),\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule\n  ]\n})\nexport class PublicModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nJokesComponent\n\nJokesComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nJokesComponent->SharedModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nSharedModule -->\n\nTimerComponent->SharedModule\n\n\n\n\n\nJokesComponent \n\nJokesComponent \n\nJokesComponent  -->\n\nSharedModule->JokesComponent \n\n\n\n\n\nTimerComponent \n\nTimerComponent \n\nTimerComponent  -->\n\nSharedModule->TimerComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/modules/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            JokesComponent\n                        \n                        \n                            TimerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JokesComponent\n                        \n                        \n                            TimerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MaterialModule } from './material.module';\nimport { JokesComponent } from './../components/jokes/jokes.component';\nimport { NgModule } from '@angular/core';\nimport { TimerComponent } from '../components/timer/timer.component';\nimport { CommonModule } from '@angular/common';\nconst sharedComponents = [\n  JokesComponent,\n  TimerComponent\n];\n\n@NgModule({\n  imports: [CommonModule, MaterialModule],\n  declarations: [sharedComponents],\n  exports: [sharedComponents, CommonModule],\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimerComponent.html":{"url":"components/TimerComponent.html","title":"component - TimerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/timer/timer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-timer\n            \n\n            \n                styleUrls\n                ./timer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./timer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                timer\n                            \n                            \n                                timerSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                resetCountdown\n                            \n                            \n                                startCountdown\n                            \n                            \n                                stopCountdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                finalCount\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        count\n                    \n                    \n                        The number that the timer will start counting to\n\n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/timer/timer.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        finalCount\n                    \n                    \n                        method that emits boolean value when a complete loop ends.\n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/timer/timer.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/timer/timer.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetCountdown\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetCountdown()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/timer/timer.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startCountdown\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartCountdown()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/timer/timer.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopCountdown\n                            \n                            \n                        \n                    \n                \n                \n                    \nstopCountdown()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/timer/timer.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timer:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/timer/timer.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timerSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/timer/timer.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AlertService } from './../../services/alert.service';\nimport { JokesManagementService } from './../../services/jokes-management.service';\nimport { TimerManagementService } from './../../services/timer-management.service';\nimport { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { timer, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.scss']\n})\n\n\n\nexport class TimerComponent implements OnInit {\n    /**\n    The number that the timer will start counting to\n  */\n  @Input() count: number;\n    /**\n    method that emits boolean value when a complete loop ends.\n  */\n  @Output() finalCount = new EventEmitter();\n    /**\n   * @ignore\n   */\n  constructor(\n    private timerManagement: TimerManagementService,\n    private jokesManagement: JokesManagementService,\n    private alert: AlertService\n\n    ) { }\n  timer: number;\n  timerSubscription: Subscription;\n\n\n  ngOnInit() {\n    this.startCountdown();\n    this.timerManagement.isCounting.subscribe((isCounting) => {\n      isCounting ? this.startCountdown() : this.stopCountdown();\n    });\n  }\n\n  startCountdown() {\n    this.timerSubscription = timer(0, 1000).subscribe((t) => {\n      this.timer = this.count - t;\n      if (t === 5) {\n        if (this.jokesManagement.getFavoriteJokes().length \n    \n\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./timer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'JokesComponent', 'selector': 'app-jokes'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProtectedLayoutComponent', 'selector': 'app-protected-layout'},{'name': 'PublicLayoutComponent', 'selector': 'app-public-layout'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimerManagementService.html":{"url":"injectables/TimerManagementService.html","title":"injectable - TimerManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimerManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/timer-management.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isCounting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                startCounting\n                            \n                            \n                                stopCounting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startCounting\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartCounting()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/timer-management.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopCounting\n                            \n                            \n                        \n                    \n                \n                \n                    \nstopCounting()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/timer-management.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCounting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isCounting:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/timer-management.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerManagementService {\n  isCounting = new EventEmitter();\n    /**\n   * @ignore\n   */\n  constructor() { }\n\n  startCounting() {\n    this.isCounting.emit(true);\n  }\n\n  stopCounting() {\n    this.isCounting.emit(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  token: string;\n  user: {\n    guid: string;\n    firstname: string;\n    lastname: string;\n    username: string;\n    email: string;\n    password: string;\n    token: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/protected/protected-layout/protected-layout.component.ts\n            \n            \n                component\n            \n            \n                ProtectedLayoutComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/public/components/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/public/components/public-layout/public-layout.component.ts\n            \n            \n                component\n            \n            \n                PublicLayoutComponent\n            \n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/shared/components/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/jokes/jokes.component.ts\n            \n            \n                component\n            \n            \n                JokesComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/components/page-not-found/page-not-found.component.ts\n            \n            \n                component\n            \n            \n                PageNotFoundComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/components/timer/timer.component.ts\n            \n            \n                component\n            \n            \n                TimerComponent\n            \n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/joke.ts\n            \n            \n                interface\n            \n            \n                Joke\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/user.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/modules/material.module.ts\n            \n            \n                variable\n            \n            \n                materialModules\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/modules/shared.module.ts\n            \n            \n                variable\n            \n            \n                sharedComponents\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/alert.service.ts\n            \n            \n                injectable\n            \n            \n                AlertService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/services/api.service.ts\n            \n            \n                injectable\n            \n            \n                ApiService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/api.service.ts\n            \n            \n                variable\n            \n            \n                API_URL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/jokes-management.service.ts\n            \n            \n                injectable\n            \n            \n                JokesManagementService\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/shared/services/timer-management.service.ts\n            \n            \n                injectable\n            \n            \n                TimerManagementService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.1.0\n        \n            @angular/cdk : ~7.1.1\n        \n            @angular/common : ~7.1.0\n        \n            @angular/compiler : ~7.1.0\n        \n            @angular/core : ~7.1.0\n        \n            @angular/forms : ~7.1.0\n        \n            @angular/material : ^7.1.1\n        \n            @angular/platform-browser : ~7.1.0\n        \n            @angular/platform-browser-dynamic : ~7.1.0\n        \n            @angular/router : ~7.1.0\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontmenAngularClient\nThis project was generated with Angular CLI version 7.1.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProtectedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PublicModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ProtectedModule\n\n\n\ncluster_ProtectedModule_declarations\n\n\n\ncluster_PublicModule\n\n\n\ncluster_PublicModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nProtectedModule\n\nProtectedModule\n\nProtectedModule -->\n\nMaterialModule->ProtectedModule\n\n\n\n\n\nPublicModule\n\nPublicModule\n\nPublicModule -->\n\nMaterialModule->PublicModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nProtectedModule -->\n\nSharedModule->ProtectedModule\n\n\n\nPublicModule -->\n\nSharedModule->PublicModule\n\n\n\n\n\nJokesComponent \n\nJokesComponent \n\nJokesComponent  -->\n\nSharedModule->JokesComponent \n\n\n\n\n\nTimerComponent \n\nTimerComponent \n\nTimerComponent  -->\n\nSharedModule->TimerComponent \n\n\n\n\n\nProtectedLayoutComponent\n\nProtectedLayoutComponent\n\nProtectedModule -->\n\nProtectedLayoutComponent->ProtectedModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nPublicModule -->\n\nLoginComponent->PublicModule\n\n\n\n\n\nPublicLayoutComponent\n\nPublicLayoutComponent\n\nPublicModule -->\n\nPublicLayoutComponent->PublicModule\n\n\n\n\n\nJokesComponent\n\nJokesComponent\n\nSharedModule -->\n\nJokesComponent->SharedModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nSharedModule -->\n\nTimerComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL   (src/.../api.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            materialModules   (src/.../material.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            sharedComponents   (src/.../shared.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/services/api.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        API_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: 'http://localhost:3000'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiUrl: 'http://localhost:3000'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/modules/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            materialModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        materialModules:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MatToolbarModule,\n  MatCardModule,\n  MatIconModule,\n  MatButtonModule,\n  MatDividerModule,\n  MatProgressBarModule,\n  MatSnackBarModule,\n  MatFormFieldModule,\n  MatInputModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/modules/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sharedComponents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sharedComponents:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  JokesComponent,\n  TimerComponent\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
