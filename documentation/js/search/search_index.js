var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/injectables/AlertService.html",[0,0.807,1,1.351]],["body/injectables/AlertService.html",[0,1.346,1,2.024,2,0.312,3,0.312,4,0.265,5,2.98,6,0.521,7,1.107,8,1.598,9,3.892,10,4.672,11,3.378,12,4.768,13,5.87,14,2.994,15,0.774,16,3.578,17,1.42,18,0.034,19,1.099,20,0.925,21,1.303,22,2.293,23,4.672,24,0.847,25,1.099,26,0.538,27,3.578,28,0.412,29,4.672,30,2.587,31,1.696,32,1.42,33,0.265,34,0.265,35,1.55,36,1.099,37,1.55,38,3.578,39,3.578,40,3.578,41,2.98,42,3.578,43,0.024,44,0.024]],["title/injectables/ApiService.html",[0,0.807,45,1.479]],["body/injectables/ApiService.html",[0,1.22,2,0.258,3,0.258,4,0.219,6,0.429,7,0.972,8,1.905,15,1.16,17,1.171,18,0.034,19,0.906,21,1.075,24,1.396,25,0.906,26,0.639,28,0.34,31,1.399,32,1.171,33,0.219,34,0.219,35,1.278,43,0.021,44,0.021,45,1.945,46,2.134,47,4.196,48,5.099,49,2.63,50,4.465,51,2.951,52,4.115,53,2.951,54,2.951,55,4.103,56,2.951,57,4.103,58,2.951,59,0.906,60,2.458,61,2.134,62,2.951,63,4.103,64,2.458,65,1.698,66,1.778,67,2.951,68,1.494,69,2.134,70,2.458,71,2.134,72,2.951,73,2.951,74,2.951,75,2.951,76,2.458,77,3.024,78,2.458,79,2.951,80,2.134,81,2.458,82,2.951]],["title/components/AppComponent.html",[83,0.405,84,0.958]],["body/components/AppComponent.html",[2,0.288,3,0.288,4,0.245,6,0.48,8,1.013,11,2.548,15,0.714,18,0.033,19,1.36,20,0.853,26,0.38,28,0.38,32,1.757,33,0.245,34,0.245,43,0.023,44,0.023,83,0.724,84,1.641,85,1.429,86,1.429,87,1.429,88,1.429,89,2.749,90,1.429,91,2.642,92,2.42,93,1.918,94,4.999,95,1.918,96,4.429,97,1.757,98,4.451,99,1.899,100,1.718,101,4.429,102,4.429,103,3.689,104,3.299,105,0.93,106,1.918,107,1.757,108,1.918,109,2.314,110,1.429,111,1.429,112,1.013,113,1.429,114,0.93,115,1.429,116,1.013,117,1.429,118,0.93,119,1.429,120,1.429,121,1.013,122,1.309,123,1.918,124,1.013,125,0.93,126,1.429,127,1.429]],["title/modules/AppModule.html",[128,0.739,129,1.999]],["body/modules/AppModule.html",[2,0.261,3,0.261,4,0.222,18,0.034,26,0.702,28,0.344,33,0.307,34,0.222,43,0.021,44,0.021,64,2.49,84,1.873,92,1.186,105,0.843,112,1.711,118,1.571,128,0.981,129,4.02,130,1.417,131,2.733,132,2.733,133,2.383,134,2.49,135,2.49,136,2.49,137,2.49,138,3.205,139,2.028,140,2.641,141,2.383,142,1.72,143,1.557,144,2.989,145,2.162,146,2.162,147,4.14,148,3.449,149,1.916,150,2.157,151,2.989,152,2.989,153,4.14,154,2.989,155,2.989,156,2.49,157,1.916,158,2.49,159,4.14]],["title/classes/AppPage.html",[34,0.231,160,2.256]],["body/classes/AppPage.html",[2,0.366,3,0.366,4,0.311,6,0.61,7,1.224,15,1.119,18,0.033,24,1.385,26,0.483,32,1.664,33,0.311,34,0.383,43,0.027,44,0.027,107,1.664,149,2.688,160,3.737,161,3.493,162,5.847,163,5.847,164,4.193,165,4.193,166,4.193,167,4.193,168,4.193,169,4.193]],["title/modules/AppRoutingModule.html",[128,0.739,138,1.795]],["body/modules/AppRoutingModule.html",[2,0.339,3,0.339,4,0.288,18,0.034,26,0.676,28,0.447,33,0.365,34,0.288,43,0.025,44,0.025,68,1.413,83,0.504,118,1.388,128,0.919,138,2.833,150,2.564,156,3.233,157,2.488,158,3.233,170,3.881,171,3.881,172,3.56,173,3.881,174,3.881,175,2.564,176,3.56,177,1.54,178,3.911,179,4.923,180,3.881,181,3.881,182,3.881,183,3.233,184,3.881]],["title/guards/AuthGuardService.html",[172,2.256,185,1.795]],["body/guards/AuthGuardService.html",[0,1.111,1,1.861,2,0.275,3,0.275,4,0.234,6,0.459,7,1.018,8,0.969,15,0.683,18,0.034,24,1.157,26,0.652,28,0.363,31,1.495,32,1.252,33,0.234,34,0.234,35,1.366,36,0.969,37,2.116,43,0.022,44,0.022,45,2.037,50,2.628,52,3.533,65,1.815,68,1.149,77,2.022,81,2.628,172,3.106,177,1.252,183,4.717,185,1.815,186,4.296,187,3.154,188,3.154,189,2.037,190,2.037,191,3.154,192,3.154,193,3.154,194,5.245,195,3.131,196,1.252,197,1.815,198,3.154,199,2.022,200,2.022,201,1.643,202,3.154,203,3.154,204,3.154,205,3.154,206,3.154,207,4.296,208,4.885,209,2.628,210,3.154,211,3.154,212,2.022]],["title/injectables/AuthService.html",[0,0.807,190,1.479]],["body/injectables/AuthService.html",[0,1.28,2,0.282,3,0.282,4,0.24,6,0.471,7,1.035,8,1.342,15,0.946,18,0.034,24,1.351,25,1.342,26,0.503,28,0.372,31,1.533,32,1.283,33,0.24,34,0.24,35,1.401,43,0.022,44,0.022,66,2.296,71,2.339,76,4.415,78,2.694,143,2.276,177,1.283,189,2.346,190,2.071,195,3.172,212,2.073,213,2.694,214,4.752,215,4.752,216,3.234,217,2.801,218,4.415,219,3.234,220,3.64,221,4.369,222,3.64,223,4.369,224,3.234,225,2.073,226,2.694,227,3.234]],["title/components/HeaderComponent.html",[83,0.405,112,0.958]],["body/components/HeaderComponent.html",[2,0.245,3,0.245,4,0.208,6,0.408,7,0.938,8,0.862,15,1.08,17,1.114,18,0.033,19,1.41,20,0.726,21,1.022,24,1.182,25,1.217,26,0.456,28,0.323,33,0.208,34,0.208,36,1.217,37,1.216,43,0.02,44,0.02,49,2.539,59,1.217,80,2.865,83,0.684,84,0.862,85,1.216,86,1.216,87,1.216,88,1.216,90,1.216,91,2.559,92,2.344,93,1.716,95,1.716,105,0.791,106,1.716,107,1.572,108,1.716,109,2.161,110,1.216,111,1.216,112,1.532,113,1.216,114,0.791,115,1.216,116,0.862,117,1.216,118,0.791,119,1.216,120,1.216,121,0.862,122,1.114,123,1.716,124,0.862,125,0.791,126,1.216,127,1.216,189,1.878,190,2.365,196,1.572,199,2.539,200,1.799,214,4.155,215,4.548,228,2.338,229,2.177,230,4.591,231,3.961,232,2.365,233,2.806,234,2.806,235,2.806,236,2.806,237,2.806,238,2.806,239,2.806,240,3.3,241,3.3,242,3.961,243,3.961]],["title/interfaces/Joke.html",[59,0.958,244,1.625]],["body/interfaces/Joke.html",[2,0.37,3,0.37,4,0.315,6,0.617,11,3.239,14,3.239,18,0.032,20,1.456,21,1.895,33,0.315,43,0.027,44,0.027,59,1.883,97,2.065,244,2.71,245,3.532,246,5.87,247,4.89,248,3.608]],["title/components/JokesComponent.html",[83,0.405,114,0.88]],["body/components/JokesComponent.html",[1,2.056,2,0.167,3,0.167,4,0.142,6,0.279,7,0.707,8,1.271,9,1.598,11,1.718,14,1.104,15,0.97,17,0.761,18,0.034,19,1.126,20,1.362,21,0.698,24,0.868,25,0.589,26,0.476,28,0.221,33,0.142,34,0.142,35,1.792,36,0.917,37,0.831,43,0.015,44,0.015,59,1.837,66,0.831,83,0.644,84,0.589,85,0.831,86,1.293,87,0.831,88,0.831,90,0.831,91,2.331,92,2.136,93,1.293,95,1.293,97,1.185,105,0.541,106,1.293,107,1.185,108,1.588,109,1.792,110,0.831,111,0.831,112,0.589,113,0.831,114,1.167,115,0.831,116,0.589,117,0.831,118,0.541,119,0.831,120,0.831,121,0.589,122,0.761,123,1.293,124,0.589,125,0.541,126,0.831,127,0.831,189,0.909,196,1.185,197,2.732,229,1.738,232,1.961,248,2.652,249,1.598,250,3.666,251,2.986,252,3.734,253,1.918,254,2.155,255,2.986,256,2.159,257,2.35,258,3.892,259,1.918,260,2.986,261,2.487,262,2.873,263,3.204,264,1.918,265,1.918,266,1.598,267,1.598,268,1.387,269,1.387,270,1.598,271,1.918,272,1.598,273,2.159,274,1.598,275,1.598,276,1.918,277,1.918,278,1.918,279,2.986,280,2.487,281,2.487,282,1.918,283,1.918,284,1.918,285,1.598,286,2.986,287,1.918,288,1.918,289,1.598,290,1.918,291,1.918,292,1.598,293,1.918,294,1.598,295,1.918,296,1.918,297,2.986,298,2.986,299,4.137,300,2.986,301,2.986,302,1.918,303,1.918,304,1.23,305,1.598,306,1.918,307,1.918,308,1.598,309,1.23,310,1.914,311,1.598,312,1.23,313,1.23,314,1.23,315,1.387,316,1.598,317,1.918,318,1.918,319,1.918,320,1.918]],["title/injectables/JokesManagementService.html",[0,0.807,254,1.625]],["body/injectables/JokesManagementService.html",[0,0.856,2,0.143,3,0.143,4,0.122,6,0.239,7,0.625,14,1.518,15,1.084,17,1.649,18,0.034,19,1.276,20,1.075,21,1.513,24,1.398,25,1.538,26,0.304,28,0.189,31,0.778,32,0.651,33,0.122,34,0.122,35,0.711,36,0.504,43,0.014,44,0.014,47,3.209,59,1.932,60,1.367,68,0.597,97,1.047,189,1.569,212,1.052,217,1.691,218,4.591,225,1.052,247,4.28,248,3.973,254,1.374,258,3.209,262,2.844,263,3.078,270,2.198,272,3.158,273,1.908,292,2.198,294,2.198,321,4.28,322,1.186,323,3.791,324,3.791,325,2.638,326,3.697,327,2.638,328,2.638,329,2.638,330,2.638,331,1.641,332,4.154,333,3.461,334,1.641,335,1.641,336,1.641,337,2.638,338,2.638,339,2.638,340,2.638,341,1.641,342,2.638,343,3.791,344,1.641,345,3.791,346,3.791,347,1.641,348,1.367,349,1.641,350,4.437,351,2.638,352,2.638,353,1.641,354,2.638,355,2.638,356,1.641,357,2.638,358,2.638,359,1.641]],["title/guards/JokesResolverService.html",[185,1.795,360,2.256]],["body/guards/JokesResolverService.html",[0,1.244,2,0.326,3,0.326,4,0.278,6,0.544,7,1.139,15,1.041,17,1.485,18,0.033,19,1.149,20,0.968,21,1.362,24,1.139,26,0.668,28,0.431,31,1.774,32,1.485,33,0.278,34,0.278,36,1.149,43,0.025,44,0.025,45,2.816,52,3.844,59,1.149,65,2.153,71,2.705,177,1.485,185,2.153,196,1.485,269,2.705,360,3.478,361,5.316,362,3.741,363,4.949,364,3.741,365,3.741,366,3.741,367,2.705,368,3.741]],["title/components/LoginComponent.html",[83,0.405,116,0.958]],["body/components/LoginComponent.html",[1,1.849,2,0.178,3,0.178,4,0.151,6,0.296,7,0.74,8,0.625,12,1.694,15,0.924,17,0.807,18,0.033,19,1.168,20,0.526,21,0.741,22,1.304,24,0.74,25,0.96,26,0.583,28,0.234,33,0.151,34,0.151,36,0.96,37,1.849,41,1.694,43,0.016,44,0.016,45,2.023,49,3.245,66,1.648,77,1.304,83,0.598,84,0.625,85,0.881,86,0.881,87,0.881,88,0.881,90,0.881,91,2.369,92,2.17,93,1.353,95,1.353,97,1.24,99,1.17,100,1.059,105,0.574,106,1.353,107,1.24,108,1.849,109,1.849,110,0.881,111,0.881,112,0.625,113,0.881,114,0.574,115,0.881,116,1.311,117,0.881,118,0.574,119,0.881,120,0.881,121,0.625,122,0.807,123,1.353,124,0.625,125,0.574,126,0.881,127,0.881,177,0.807,190,2.023,195,3.245,196,1.24,197,2.189,199,2.438,200,1.304,201,2.532,209,1.694,217,2.003,226,1.694,229,1.803,232,2.023,257,2.003,258,2.259,263,1.798,285,1.694,289,1.694,304,1.304,309,1.304,310,2.736,312,1.304,313,1.304,314,2.003,315,1.471,367,1.471,369,1.694,370,3.804,371,3.124,372,4.861,373,4.268,374,2.034,375,2.034,376,3.124,377,2.034,378,2.034,379,3.804,380,2.603,381,4.605,382,4.268,383,4.05,384,2.034,385,1.694,386,1.694,387,2.034,388,1.471,389,1.694,390,2.603,391,2.034,392,2.034,393,2.034,394,2.034,395,1.694,396,2.034,397,1.694,398,2.034,399,1.694,400,2.034,401,1.694,402,2.034,403,2.034,404,2.034,405,3.124,406,3.124,407,4.268,408,3.086,409,3.124,410,1.471,411,2.603,412,1.471,413,2.034,414,2.034,415,2.603,416,1.694,417,3.124]],["title/modules/MaterialModule.html",[128,0.739,139,1.136]],["body/modules/MaterialModule.html",[2,0.362,3,0.362,4,0.308,18,0.033,26,0.642,28,0.477,30,2.999,33,0.381,34,0.308,43,0.026,44,0.026,68,1.51,128,0.982,139,2.18,150,2.674,418,2.999,419,4.276,420,4.276,421,4.276,422,4.276,423,4.276,424,4.276,425,4.276,426,4.276,427,4.276]],["title/components/PageNotFoundComponent.html",[83,0.405,118,0.88]],["body/components/PageNotFoundComponent.html",[2,0.273,3,0.273,4,0.232,6,0.455,7,1.012,8,0.961,15,0.925,18,0.032,19,1.312,24,0.741,25,0.961,26,0.36,28,0.36,33,0.232,34,0.232,36,1.494,43,0.022,44,0.022,83,0.711,84,0.961,85,1.355,86,1.355,87,1.355,88,1.355,90,1.355,91,2.615,92,2.396,93,1.85,95,1.85,105,0.882,106,1.85,107,1.695,108,1.85,109,2.264,110,1.355,111,1.355,112,0.961,113,1.355,114,0.882,115,1.355,116,0.961,117,1.355,118,1.474,119,2.615,120,1.355,121,0.961,122,1.241,123,1.85,124,0.961,125,0.882,126,1.355,127,1.355,157,3.118,196,1.695,229,2.306,232,2.478,428,4.052,429,2.606,430,4.354,431,4.864,432,4.272,433,3.128,434,3.128]],["title/components/ProtectedLayoutComponent.html",[83,0.405,121,0.958]],["body/components/ProtectedLayoutComponent.html",[1,2.092,2,0.228,3,0.228,4,0.194,6,0.38,7,0.892,8,0.803,15,0.955,17,1.495,18,0.033,19,1.484,20,0.676,21,1.371,22,1.676,24,1.046,25,0.803,26,0.508,28,0.301,33,0.194,34,0.194,36,1.157,37,1.132,43,0.019,44,0.019,59,1.356,66,1.631,68,0.952,83,0.665,84,0.803,85,1.132,86,1.132,87,1.132,88,1.132,90,1.132,91,2.52,92,2.308,93,1.631,95,1.631,105,0.737,106,1.631,107,1.495,108,1.631,109,2.092,110,1.132,111,1.132,112,0.803,113,1.132,114,0.737,115,1.132,116,0.803,117,1.132,118,0.737,119,1.132,120,1.132,121,1.484,122,2.274,123,1.631,124,0.803,125,0.737,126,1.132,127,1.132,196,1.495,197,2.167,222,2.178,229,2.093,232,2.29,257,1.676,263,2.54,305,2.178,309,1.676,310,1.676,312,1.676,313,1.676,314,2.414,386,2.178,389,2.178,410,1.89,412,1.89,435,4.024,436,3.493,437,1.89,438,3.678,439,3.678,440,3.137,441,3.766,442,2.614,443,2.614,444,3.766,445,2.614,446,2.614,447,2.614,448,2.614,449,2.614,450,2.614,451,2.614,452,2.614,453,2.614,454,2.614]],["title/modules/ProtectedModule.html",[128,0.739,455,1.999]],["body/modules/ProtectedModule.html",[2,0.3,3,0.3,4,0.255,18,0.033,26,0.692,28,0.396,33,0.338,34,0.255,43,0.023,44,0.023,68,1.252,83,0.447,105,0.97,121,1.819,122,1.364,128,1.078,130,1.63,131,2.936,132,1.978,133,1.978,139,2.114,140,2.752,141,2.619,142,1.978,143,1.791,145,2.486,146,2.486,150,2.371,175,2.158,176,2.486,177,1.364,178,2.486,436,2.486,455,3.938,456,2.864,457,2.864,458,3.438,459,3.438,460,3.291,461,2.204,462,2.864,463,3.438,464,3.438]],["title/components/PublicLayoutComponent.html",[83,0.405,124,0.958]],["body/components/PublicLayoutComponent.html",[2,0.14,3,0.14,4,0.119,6,0.234,7,0.614,8,1.568,15,1.042,17,1.029,18,0.033,19,1.15,20,0.415,21,0.944,22,1.03,24,1.095,25,1.002,26,0.532,28,0.185,33,0.119,34,0.119,36,0.797,37,1.904,43,0.013,44,0.013,45,2.192,47,2.708,59,1.568,68,0.585,80,1.161,83,0.534,84,0.493,85,0.696,86,0.696,87,0.696,88,0.696,90,0.696,91,2.211,92,2.071,93,1.124,95,1.124,97,1.029,98,1.338,99,2.155,100,1.95,105,0.453,106,1.124,107,1.029,108,1.413,109,1.622,110,0.696,111,0.696,112,0.493,113,0.696,114,0.453,115,0.696,116,0.493,117,0.696,118,0.453,119,0.696,120,0.696,121,0.493,122,0.637,123,1.124,124,1.15,125,0.453,126,1.904,127,0.696,175,1.23,177,0.637,189,1.775,190,1.775,195,2.964,196,1.029,199,2.091,200,1.03,201,1.351,217,1.663,225,2.4,229,1.547,232,1.775,248,2.4,254,1.95,256,2.359,257,1.03,262,1.663,263,2.529,268,1.876,269,1.161,273,1.161,274,1.338,275,1.338,280,1.338,304,2.634,309,2.4,310,2.091,311,1.338,312,1.03,313,1.03,314,1.03,315,2.359,316,1.338,326,3.12,367,1.161,385,1.338,390,1.338,410,1.161,411,2.718,412,2.359,415,2.718,416,1.338,437,1.161,438,2.718,439,2.718,440,2.161,465,4.14,466,3.594,467,3.48,468,4.813,469,2.594,470,1.606,471,3.745,472,2.718,473,2.155,474,1.606,475,2.594,476,1.606,477,1.606,478,1.606,479,1.606,480,1.606,481,1.606,482,2.594,483,2.594,484,2.594,485,2.359,486,1.606,487,2.161,488,2.594,489,2.161,490,2.594,491,2.594,492,1.606,493,1.606,494,1.606,495,2.594,496,1.606,497,1.606,498,1.606,499,1.606,500,1.606,501,3.262,502,1.606,503,1.606,504,1.606,505,1.606,506,1.606,507,1.606,508,2.594,509,2.594,510,1.606,511,1.606,512,1.606,513,1.606,514,1.606,515,1.606,516,1.606,517,1.606,518,1.606,519,1.606,520,1.606,521,1.606,522,1.606,523,1.606,524,1.606,525,1.606,526,2.594,527,1.606]],["title/modules/PublicModule.html",[128,0.739,528,1.999]],["body/modules/PublicModule.html",[2,0.269,3,0.269,4,0.229,18,0.034,26,0.7,28,0.355,33,0.314,34,0.229,43,0.022,44,0.022,49,1.978,59,0.948,68,1.124,83,0.55,105,0.87,116,1.769,124,1.769,128,1.002,130,1.463,131,2.779,132,1.776,133,1.776,139,2.048,140,2.667,141,2.435,142,1.776,143,1.607,145,2.232,146,2.232,150,2.204,175,2.006,176,2.232,177,1.225,178,3.06,360,3.06,363,2.571,388,2.232,460,3.06,461,1.978,462,2.571,466,2.232,528,3.929,529,2.571,530,2.571,531,3.086,532,3.086,533,3.086,534,3.086,535,3.086,536,3.086,537,4.232,538,4.232,539,3.086,540,3.086]],["title/modules/SharedModule.html",[128,0.739,140,1.479]],["body/modules/SharedModule.html",[2,0.298,3,0.298,4,0.254,18,0.033,26,0.681,28,0.393,33,0.402,34,0.254,43,0.023,44,0.023,68,1.244,105,0.964,114,1.745,125,1.745,128,1.074,130,1.62,131,2.928,132,1.967,133,1.967,139,2.11,140,2.953,141,2.609,142,1.967,143,1.78,150,2.361,460,3.679,461,2.191,541,2.847,542,2.847,543,3.418,544,2.847,545,2.471,546,3.418,547,3.418,548,3.418,549,3.679]],["title/components/TimerComponent.html",[83,0.405,125,0.88]],["body/components/TimerComponent.html",[1,1.452,2,0.195,3,0.195,4,0.166,6,0.325,7,1.06,8,0.686,14,3.008,15,1.164,18,0.033,19,1.03,20,1.158,24,1.06,25,1.375,26,0.552,28,0.257,33,0.166,34,0.166,35,0.967,36,0.686,37,1.744,43,0.017,44,0.017,65,1.284,83,0.623,84,0.686,85,0.967,86,0.967,87,0.967,88,0.967,90,0.967,91,2.427,92,2.223,93,1.452,95,1.452,97,1.331,100,1.746,105,0.63,106,1.452,107,1.331,108,1.452,109,1.939,110,0.967,111,0.967,112,0.686,113,0.967,114,0.63,115,0.967,116,0.686,117,0.967,118,0.63,119,0.967,120,0.967,121,0.686,122,0.886,123,1.452,124,0.686,125,1.262,126,2.427,127,0.967,189,1.589,196,1.331,197,1.284,201,1.163,229,1.909,232,2.122,252,3.729,254,1.746,256,1.614,266,1.86,267,1.86,268,2.424,281,1.86,467,1.614,472,1.86,473,1.929,485,2.912,487,1.86,489,2.793,550,1.86,551,4.027,552,3.353,553,4.476,554,4.027,555,4.476,556,4.027,557,4.798,558,4.476,559,4.027,560,2.793,561,2.232,562,3.353,563,3.353,564,3.353,565,2.232,566,2.232,567,2.232,568,2.232,569,2.232,570,2.232,571,4.476,572,2.232,573,2.232,574,3.353,575,2.232,576,2.232,577,2.232,578,2.232,579,2.232,580,2.232,581,2.232,582,3.353,583,1.86]],["title/injectables/TimerManagementService.html",[0,0.807,473,1.795]],["body/injectables/TimerManagementService.html",[0,1.384,2,0.331,3,0.331,4,0.281,6,0.552,7,1.149,15,1.158,18,0.033,24,1.149,25,1.49,26,0.436,28,0.436,31,1.797,32,1.504,33,0.281,34,0.281,35,1.642,36,1.164,43,0.025,44,0.025,97,1.925,99,2.181,100,1.974,201,2.526,322,2.741,348,3.158,467,4.077,473,2.791,485,3.868,584,4.697,585,5.639,586,5.639,587,3.791,588,3.791,589,3.791,590,3.791]],["title/interfaces/User.html",[66,1.351,244,1.625]],["body/interfaces/User.html",[2,0.362,3,0.362,4,0.308,6,0.604,11,3.647,18,0.032,20,1.507,33,0.308,43,0.026,44,0.026,66,2.642,77,3.837,97,2.037,244,2.674,380,3.455,383,3.455,395,3.455,397,3.455,399,3.455,401,3.455,591,3.455,592,5.133]],["title/coverage.html",[593,3.552]],["body/coverage.html",[0,1.394,1,1.298,4,0.222,5,2.497,18,0.033,20,0.775,34,0.222,43,0.021,44,0.021,45,1.421,46,2.999,59,0.921,61,2.999,66,1.298,69,2.167,83,0.757,84,0.921,89,2.497,112,0.921,114,0.845,116,0.921,118,0.845,121,0.921,124,0.921,125,0.845,139,1.091,157,1.921,160,2.167,161,2.497,190,1.421,201,1.561,213,2.497,228,2.497,244,2.16,245,2.497,249,2.497,254,1.561,304,4.036,321,2.497,322,2.999,369,2.497,408,2.167,418,2.167,428,2.497,429,2.497,435,2.497,436,2.167,437,2.999,465,2.497,466,2.167,473,1.725,545,2.167,549,2.167,550,2.497,584,2.497,591,2.497,593,2.497,594,2.497,595,2.997,596,2.997,597,4.757,598,4.148,599,4.757,600,4.148,601,4.148,602,4.148,603,2.997,604,2.997,605,4.133,606,5.715,607,2.997,608,2.997,609,2.997,610,2.997,611,2.997,612,2.497,613,2.497,614,3.456,615,2.497,616,2.997,617,2.997]],["title/dependencies.html",[130,1.779,618,2.602]],["body/dependencies.html",[18,0.033,28,0.476,30,2.988,43,0.026,44,0.026,65,2.378,130,1.959,148,4.267,149,3.283,177,1.64,388,2.988,461,2.649,619,4.133,620,6.242,621,4.133,622,5.122,623,4.133,624,4.133,625,4.133,626,4.133,627,4.133,628,4.133,629,4.133,630,4.133,631,4.133,632,4.133,633,4.133,634,4.133]],["title/index.html",[6,0.379,560,2.167,635,2.602]],["body/index.html",[18,0.027,43,0.027,44,0.027,59,1.752,103,4.415,220,4.752,240,4.415,241,4.752,262,2.801,308,3.64,430,3.64,594,4.415,636,5.704,637,4.369,638,4.369,639,5.704,640,4.369,641,4.369,642,4.369,643,4.369,644,4.369,645,4.369,646,4.369,647,4.369,648,4.369]],["title/modules.html",[128,1.01]],["body/modules.html",[18,0.028,43,0.028,44,0.028,128,1.059,129,2.866,138,2.573,139,1.628,140,2.12,149,3.831,261,4.979,455,2.866,528,2.866,649,5.977,650,6.209,651,5.374,652,5.374]],["title/overview.html",[653,3.552]],["body/overview.html",[0,0.792,18,0.033,33,0.227,34,0.227,43,0.022,44,0.022,83,0.398,84,1.766,105,0.863,112,1.477,114,1.621,116,1.477,118,1.356,121,1.477,124,1.477,125,1.621,128,0.997,129,3.996,130,1.451,131,1.762,132,1.762,133,1.762,134,2.55,135,2.55,136,2.55,137,2.55,138,2.768,139,2.043,140,2.922,141,2.422,142,1.762,143,1.594,175,1.451,185,1.762,244,1.594,455,3.753,456,2.55,457,2.55,528,3.854,529,2.55,530,2.55,541,2.55,542,2.55,544,2.55,583,3.506,653,2.55,654,3.061,655,3.061,656,3.061,657,4.209]],["title/routes.html",[175,2.021]],["body/routes.html",[18,0.03,43,0.03,44,0.03,175,2.38]],["title/miscellaneous/variables.html",[605,2.714,658,2.167]],["body/miscellaneous/variables.html",[6,0.503,18,0.033,20,1.464,43,0.024,44,0.024,46,2.501,61,4.205,69,3.701,70,2.881,99,3.346,100,3.029,114,0.975,125,0.975,139,1.864,212,2.217,225,2.929,333,4.536,408,3.701,418,2.501,419,2.881,420,2.881,421,2.881,422,2.881,423,2.881,424,2.881,425,2.881,426,2.881,427,2.881,545,2.501,549,3.701,605,2.501,612,2.881,613,2.881,614,2.881,615,4.264,658,2.881,659,3.459,660,4.57,661,3.459,662,3.459,663,3.459,664,3.459,665,3.459,666,3.459,667,4.57,668,4.57,669,4.57]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":304,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{},"coverage.html":{}}}],["0!import",{"_index":527,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["0.8.26",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":656,"title":{},"body":{"overview.html":{}}}],["1.9.0",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":282,"title":{},"body":{"components/JokesComponent.html":{}}}],["100",{"_index":316,"title":{},"body":{"components/JokesComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["1000).subscribe((t",{"_index":579,"title":{},"body":{"components/TimerComponent.html":{}}}],["10px",{"_index":417,"title":{},"body":{"components/LoginComponent.html":{}}}],["14px",{"_index":320,"title":{},"body":{"components/JokesComponent.html":{}}}],["2",{"_index":657,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":609,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":515,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["22",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":413,"title":{},"body":{"components/LoginComponent.html":{}}}],["3000",{"_index":42,"title":{},"body":{"injectables/AlertService.html":{}}}],["300px",{"_index":514,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["33",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":306,"title":{},"body":{"components/JokesComponent.html":{}}}],["40px",{"_index":512,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["4px",{"_index":526,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["5",{"_index":583,"title":{},"body":{"components/TimerComponent.html":{},"overview.html":{}}}],["6",{"_index":654,"title":{},"body":{"overview.html":{}}}],["6.3.3",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["64px",{"_index":454,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["66",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["7.1.0",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":655,"title":{},"body":{"overview.html":{}}}],["9/10",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["absolut",{"_index":518,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["account",{"_index":405,"title":{},"body":{"components/LoginComponent.html":{}}}],["account_circl",{"_index":242,"title":{},"body":{"components/HeaderComponent.html":{}}}],["activatedrout",{"_index":471,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["actual_compon",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["add",{"_index":273,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/PublicLayoutComponent.html":{}}}],["addjok",{"_index":469,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["addjoke(iscount",{"_index":475,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["addtofavorit",{"_index":325,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["addtofavorites(jok",{"_index":272,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{}}}],["alert",{"_index":197,"title":{},"body":{"guards/AuthGuardService.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["alert.servic",{"_index":193,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["alertservic",{"_index":1,"title":{"injectables/AlertService.html":{}},"body":{"injectables/AlertService.html":{},"guards/AuthGuardService.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{}}}],["align",{"_index":312,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["alreadi",{"_index":290,"title":{},"body":{"components/JokesComponent.html":{}}}],["angular",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/anim",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":461,"title":{},"body":{"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{}}}],["angular/compil",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":28,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":388,"title":{},"body":{"components/LoginComponent.html":{},"modules/PublicModule.html":{},"dependencies.html":{}}}],["angular/materi",{"_index":30,"title":{},"body":{"injectables/AlertService.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"dependencies.html":{}}}],["api",{"_index":198,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["api.servic",{"_index":192,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["api_url",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiserivc",{"_index":376,"title":{},"body":{"components/LoginComponent.html":{}}}],["apiservic",{"_index":45,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{},"coverage.html":{}}}],["apiurl",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["app.compon",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":84,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["appmodul",{"_index":129,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":160,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodul",{"_index":138,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":248,"title":{},"body":{"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/PublicLayoutComponent.html":{}}}],["auth",{"_index":199,"title":{},"body":{"guards/AuthGuardService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["auth.servic",{"_index":191,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["authguardservic",{"_index":172,"title":{"guards/AuthGuardService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{}}}],["author",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{}}}],["authservic",{"_index":190,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{},"coverage.html":{}}}],["auto",{"_index":308,"title":{},"body":{"components/JokesComponent.html":{},"index.html":{}}}],["avail",{"_index":652,"title":{},"body":{"modules.html":{}}}],["back",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"components/ProtectedLayoutComponent.html":{}}}],["backend",{"_index":638,"title":{},"body":{"index.html":{}}}],["backend.git",{"_index":642,"title":{},"body":{"index.html":{}}}],["bar",{"_index":523,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["bearer",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{}}}],["bodi",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{}}}],["boolean",{"_index":189,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["bootstrap",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["border",{"_index":524,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["brows",{"_index":650,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":167,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":12,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{}}}],["calc(100",{"_index":453,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["calc(50",{"_index":511,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["canactiv",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{}}}],["card",{"_index":412,"title":{},"body":{"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["categori",{"_index":246,"title":{},"body":{"interfaces/Joke.html":{}}}],["center",{"_index":314,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["check",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JokesManagementService.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["chuck",{"_index":240,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["class",{"_index":34,"title":{"classes/AppPage.html":{}},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["client",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["clone",{"_index":639,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_protectedmodul",{"_index":456,"title":{},"body":{"modules/ProtectedModule.html":{},"overview.html":{}}}],["cluster_protectedmodule_declar",{"_index":457,"title":{},"body":{"modules/ProtectedModule.html":{},"overview.html":{}}}],["cluster_protectedmodule_import",{"_index":458,"title":{},"body":{"modules/ProtectedModule.html":{}}}],["cluster_publicmodul",{"_index":529,"title":{},"body":{"modules/PublicModule.html":{},"overview.html":{}}}],["cluster_publicmodule_declar",{"_index":530,"title":{},"body":{"modules/PublicModule.html":{},"overview.html":{}}}],["cluster_publicmodule_import",{"_index":531,"title":{},"body":{"modules/PublicModule.html":{}}}],["cluster_sharedmodul",{"_index":541,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":542,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":544,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":543,"title":{},"body":{"modules/SharedModule.html":{}}}],["column",{"_index":409,"title":{},"body":{"components/LoginComponent.html":{}}}],["commonmodul",{"_index":460,"title":{},"body":{"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{}}}],["complet",{"_index":562,"title":{},"body":{"components/TimerComponent.html":{}}}],["compon",{"_index":83,"title":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["components/jokes/jokes.compon",{"_index":547,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/login/login.compon",{"_index":536,"title":{},"body":{"modules/PublicModule.html":{}}}],["components/publ",{"_index":535,"title":{},"body":{"modules/PublicModule.html":{}}}],["components/timer/timer.compon",{"_index":548,"title":{},"body":{"modules/SharedModule.html":{}}}],["const",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/JokesManagementService.html":{},"modules/MaterialModule.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{}}}],["constructor",{"_index":36,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuardService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["constructor(alert",{"_index":442,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["constructor(apiserivc",{"_index":374,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(apiservic",{"_index":364,"title":{},"body":{"guards/JokesResolverService.html":{}}}],["constructor(auth",{"_index":233,"title":{},"body":{"components/HeaderComponent.html":{}}}],["constructor(jokesmanag",{"_index":253,"title":{},"body":{"components/JokesComponent.html":{}}}],["constructor(priv",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"guards/JokesResolverService.html":{}}}],["constructor(rout",{"_index":470,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["contain",{"_index":309,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["content",{"_index":22,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["context",{"_index":615,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":557,"title":{},"body":{"components/TimerComponent.html":{}}}],["counter",{"_index":483,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["coverag",{"_index":593,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":260,"title":{},"body":{"components/JokesComponent.html":{}}}],["dashboard",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data.token",{"_index":394,"title":{},"body":{"components/LoginComponent.html":{}}}],["data.user.email",{"_index":400,"title":{},"body":{"components/LoginComponent.html":{}}}],["data.user.firstnam",{"_index":396,"title":{},"body":{"components/LoginComponent.html":{}}}],["data.user.guid",{"_index":402,"title":{},"body":{"components/LoginComponent.html":{}}}],["data.user.lastnam",{"_index":398,"title":{},"body":{"components/LoginComponent.html":{}}}],["declar",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["deep",{"_index":521,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["default",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{},"injectables/TimerManagementService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":15,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["delete_forev",{"_index":301,"title":{},"body":{"components/JokesComponent.html":{}}}],["depend",{"_index":130,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":332,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["direct",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["director",{"_index":644,"title":{},"body":{"index.html":{}}}],["dismiss",{"_index":289,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{}}}],["display",{"_index":257,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["document",{"_index":594,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["dootherthingiffals",{"_index":340,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["dosomethingiftru",{"_index":339,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["durat",{"_index":13,"title":{},"body":{"injectables/AlertService.html":{}}}],["dynam",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.t",{"_index":161,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":165,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":164,"title":{},"body":{"classes/AppPage.html":{}}}],["element",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["element(by.css('app",{"_index":168,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":399,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["emit",{"_index":489,"title":{},"body":{"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["emitt",{"_index":488,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["end",{"_index":564,"title":{},"body":{"components/TimerComponent.html":{}}}],["enough",{"_index":279,"title":{},"body":{"components/JokesComponent.html":{}}}],["environ",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{}}}],["error",{"_index":209,"title":{},"body":{"guards/AuthGuardService.html":{},"components/LoginComponent.html":{}}}],["error.error.err",{"_index":403,"title":{},"body":{"components/LoginComponent.html":{}}}],["error.statustext",{"_index":404,"title":{},"body":{"components/LoginComponent.html":{}}}],["evenli",{"_index":510,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["event",{"_index":487,"title":{},"body":{"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["eventemitt",{"_index":485,"title":{},"body":{"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["exampl",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JokesManagementService.html":{}}}],["exist",{"_index":291,"title":{},"body":{"components/JokesComponent.html":{}}}],["export",{"_index":33,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{},"overview.html":{}}}],["fals",{"_index":212,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/JokesManagementService.html":{},"miscellaneous/variables.html":{}}}],["favorit",{"_index":263,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["favorite_bord",{"_index":298,"title":{},"body":{"components/JokesComponent.html":{}}}],["favoritejok",{"_index":323,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["field",{"_index":414,"title":{},"body":{"components/LoginComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["finalcount",{"_index":559,"title":{},"body":{"components/TimerComponent.html":{}}}],["firstnam",{"_index":395,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["flag",{"_index":482,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["flex",{"_index":310,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["font",{"_index":318,"title":{},"body":{"components/JokesComponent.html":{}}}],["form",{"_index":372,"title":{},"body":{"components/LoginComponent.html":{}}}],["formcontrol",{"_index":381,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":379,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodul",{"_index":537,"title":{},"body":{"modules/PublicModule.html":{}}}],["found",{"_index":430,"title":{},"body":{"components/PageNotFoundComponent.html":{},"index.html":{}}}],["found'},{'nam",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["found.compon",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":432,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":431,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.t",{"_index":429,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":434,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":433,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/pag",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["frontmen",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["gateway",{"_index":203,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["gener",{"_index":647,"title":{},"body":{"index.html":{}}}],["get",{"_index":635,"title":{"index.html":{}},"body":{}}],["getfavoritejok",{"_index":326,"title":{},"body":{"injectables/JokesManagementService.html":{},"components/PublicLayoutComponent.html":{}}}],["getjokeslength",{"_index":296,"title":{},"body":{"components/JokesComponent.html":{}}}],["getrandomjok",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{},"injectables/JokesManagementService.html":{},"components/PublicLayoutComponent.html":{}}}],["gettitletext",{"_index":162,"title":{},"body":{"classes/AppPage.html":{}}}],["getuserfavoritejok",{"_index":441,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["getuserfavoritejokes(userid",{"_index":444,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["getuserjok",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{}}}],["git",{"_index":640,"title":{},"body":{"index.html":{}}}],["git@github.com:mmounirf/chuck",{"_index":641,"title":{},"body":{"index.html":{}}}],["graph",{"_index":651,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":185,"title":{"guards/AuthGuardService.html":{},"guards/JokesResolverService.html":{}},"body":{"guards/AuthGuardService.html":{},"guards/JokesResolverService.html":{},"overview.html":{}}}],["guard.servic",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guard.service.t",{"_index":187,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guard.service.ts:23",{"_index":188,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guid",{"_index":401,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["h1')).gettext",{"_index":169,"title":{},"body":{"classes/AppPage.html":{}}}],["hammerj",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["header",{"_index":80,"title":{},"body":{"injectables/ApiService.html":{},"components/HeaderComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["header'},{'nam",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["header.component.html",{"_index":231,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":230,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercompon",{"_index":112,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":305,"title":{},"body":{"components/JokesComponent.html":{},"components/ProtectedLayoutComponent.html":{}}}],["here",{"_index":648,"title":{},"body":{"index.html":{}}}],["host",{"_index":519,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["html",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["http",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{}}}],["http://localhost:3000",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpclientmodul",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["id",{"_index":247,"title":{},"body":{"interfaces/Joke.html":{},"injectables/JokesManagementService.html":{}}}],["identifi",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":35,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["implement",{"_index":196,"title":{},"body":{"guards/AuthGuardService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["import",{"_index":26,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["infavorit",{"_index":358,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["info",{"_index":2,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{}}}],["inject",{"_index":0,"title":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/JokesManagementService.html":{},"injectables/TimerManagementService.html":{}},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"injectables/TimerManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":252,"title":{},"body":{"components/JokesComponent.html":{},"components/TimerComponent.html":{}}}],["instal",{"_index":636,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":244,"title":{"interfaces/Joke.html":{},"interfaces/User.html":{}},"body":{"interfaces/Joke.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces/jok",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{},"injectables/JokesManagementService.html":{}}}],["interfaces/us",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{}}}],["iscount",{"_index":467,"title":{},"body":{"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["isinfavorit",{"_index":327,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["isinfavorites(100",{"_index":338,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["isinfavorites(id",{"_index":270,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{}}}],["isinfavorites(joke.id",{"_index":297,"title":{},"body":{"components/JokesComponent.html":{}}}],["isloggedin",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["item",{"_index":313,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["joke",{"_index":59,"title":{"interfaces/Joke.html":{}},"body":{"injectables/ApiService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"coverage.html":{},"index.html":{}}}],["joke.id",{"_index":357,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["joke.jok",{"_index":299,"title":{},"body":{"components/JokesComponent.html":{}}}],["jokes'},{'nam",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["jokes.component.html",{"_index":251,"title":{},"body":{"components/JokesComponent.html":{}}}],["jokes.component.scss",{"_index":250,"title":{},"body":{"components/JokesComponent.html":{}}}],["jokescompon",{"_index":114,"title":{"components/JokesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["jokesmanag",{"_index":256,"title":{},"body":{"components/JokesComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["jokesmanagementservic",{"_index":254,"title":{"injectables/JokesManagementService.html":{}},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{}}}],["jokesresolverservic",{"_index":360,"title":{"guards/JokesResolverService.html":{}},"body":{"guards/JokesResolverService.html":{},"modules/PublicModule.html":{}}}],["js",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem('ch_us",{"_index":449,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["json.parse(window.localstorage.getitem('ch_favorite_jok",{"_index":496,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["json.parse(window.localstorage.getitem('ch_user')).token",{"_index":78,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["json.stringifi",{"_index":393,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.stringify(this.getfavoritejok",{"_index":355,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["justifi",{"_index":410,"title":{},"body":{"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["lastnam",{"_index":397,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["layout",{"_index":438,"title":{},"body":{"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["layout'},{'nam",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["layout.compon",{"_index":462,"title":{},"body":{"modules/ProtectedModule.html":{},"modules/PublicModule.html":{}}}],["layout.component.html",{"_index":440,"title":{},"body":{"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["layout.component.scss",{"_index":439,"title":{},"body":{"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["layout.component.t",{"_index":437,"title":{},"body":{"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"coverage.html":{}}}],["layout.component.ts:10",{"_index":443,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["layout.component.ts:14",{"_index":474,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["layout.component.ts:16",{"_index":447,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["layout.component.ts:21",{"_index":445,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["layout.component.ts:27",{"_index":481,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["layout.component.ts:31",{"_index":486,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["layout.component.ts:32",{"_index":479,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["layout.component.ts:41",{"_index":478,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["layout.component.ts:45",{"_index":477,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["layout.component.ts:49",{"_index":480,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["layout.component.ts:54",{"_index":476,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["layout/protect",{"_index":436,"title":{},"body":{"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"coverage.html":{}}}],["layout/publ",{"_index":466,"title":{},"body":{"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"coverage.html":{}}}],["left",{"_index":516,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["legend",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"overview.html":{}}}],["limit",{"_index":287,"title":{},"body":{"components/JokesComponent.html":{}}}],["list",{"_index":258,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/LoginComponent.html":{}}}],["liter",{"_index":592,"title":{},"body":{"interfaces/User.html":{}}}],["loadchildren",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["lock",{"_index":243,"title":{},"body":{"components/HeaderComponent.html":{}}}],["log",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["login",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/PublicModule.html":{}}}],["login'},{'nam",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["login(bodi",{"_index":55,"title":{},"body":{"injectables/ApiService.html":{}}}],["login.component.html",{"_index":371,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":370,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":116,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["loop",{"_index":563,"title":{},"body":{"components/TimerComponent.html":{}}}],["management.servic",{"_index":268,"title":{},"body":{"components/JokesComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["management.service.t",{"_index":322,"title":{},"body":{"injectables/JokesManagementService.html":{},"injectables/TimerManagementService.html":{},"coverage.html":{}}}],["management.service.ts:102",{"_index":341,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["management.service.ts:11",{"_index":349,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["management.service.ts:117",{"_index":336,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["management.service.ts:12",{"_index":587,"title":{},"body":{"injectables/TimerManagementService.html":{}}}],["management.service.ts:16",{"_index":348,"title":{},"body":{"injectables/JokesManagementService.html":{},"injectables/TimerManagementService.html":{}}}],["management.service.ts:32",{"_index":335,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["management.service.ts:46",{"_index":347,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["management.service.ts:59",{"_index":334,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["management.service.ts:6",{"_index":588,"title":{},"body":{"injectables/TimerManagementService.html":{}}}],["management.service.ts:73",{"_index":344,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["management.service.ts:87",{"_index":331,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["margin",{"_index":415,"title":{},"body":{"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["mat",{"_index":411,"title":{},"body":{"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["matbuttonmodul",{"_index":422,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodul",{"_index":420,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":44,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdividermodul",{"_index":423,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["material.modul",{"_index":546,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodul",{"_index":139,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodul",{"_index":426,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["maticonmodul",{"_index":421,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodul",{"_index":427,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressbarmodul",{"_index":424,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":29,"title":{},"body":{"injectables/AlertService.html":{}}}],["matsnackbarmodul",{"_index":425,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodul",{"_index":419,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":286,"title":{},"body":{"components/JokesComponent.html":{}}}],["metadata",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["method",{"_index":7,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["min",{"_index":513,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["miscellan",{"_index":658,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modul",{"_index":128,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["move",{"_index":643,"title":{},"body":{"index.html":{}}}],["name",{"_index":19,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["navigateto",{"_index":163,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":201,"title":{},"body":{"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"coverage.html":{}}}],["ng",{"_index":520,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["ngmodul",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":232,"title":{},"body":{"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["ngzone",{"_index":27,"title":{},"body":{"injectables/AlertService.html":{}}}],["none",{"_index":302,"title":{},"body":{"components/JokesComponent.html":{}}}],["norri",{"_index":241,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["npm",{"_index":646,"title":{},"body":{"index.html":{}}}],["null",{"_index":41,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{}}}],["number",{"_index":14,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/TimerComponent.html":{}}}],["object",{"_index":333,"title":{},"body":{"injectables/JokesManagementService.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"guards/JokesResolverService.html":{}}}],["on",{"_index":275,"title":{},"body":{"components/JokesComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["oninit",{"_index":229,"title":{},"body":{"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["onsubmit",{"_index":373,"title":{},"body":{"components/LoginComponent.html":{}}}],["option",{"_index":21,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["out",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["output",{"_index":558,"title":{},"body":{"components/TimerComponent.html":{}}}],["over",{"_index":202,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["overflow",{"_index":307,"title":{},"body":{"components/JokesComponent.html":{}}}],["overview",{"_index":653,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":317,"title":{},"body":{"components/JokesComponent.html":{}}}],["packag",{"_index":618,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":303,"title":{},"body":{"components/JokesComponent.html":{}}}],["page",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["pagenotfoundcompon",{"_index":118,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["param",{"_index":350,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["paramet",{"_index":17,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["password",{"_index":383,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["path",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{}}}],["posit",{"_index":517,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["privat",{"_index":37,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuardService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["product",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":522,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["properti",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{}}}],["protect",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["protected/protected.module#protectedmodul",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["protectedlayoutcompon",{"_index":121,"title":{"components/ProtectedLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["protectedmodul",{"_index":455,"title":{"modules/ProtectedModule.html":{}},"body":{"modules/ProtectedModule.html":{},"modules.html":{},"overview.html":{}}}],["protectedrout",{"_index":463,"title":{},"body":{"modules/ProtectedModule.html":{}}}],["protractor",{"_index":166,"title":{},"body":{"classes/AppPage.html":{}}}],["provid",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["providedin",{"_index":31,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"injectables/TimerManagementService.html":{}}}],["public",{"_index":8,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["public/public.module#publicmodul",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["publiclayoutcompon",{"_index":124,"title":{"components/PublicLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["publicmodul",{"_index":528,"title":{"modules/PublicModule.html":{}},"body":{"modules/PublicModule.html":{},"modules.html":{},"overview.html":{}}}],["publicrout",{"_index":539,"title":{},"body":{"modules/PublicModule.html":{}}}],["radiu",{"_index":525,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["random",{"_index":262,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/PublicLayoutComponent.html":{},"index.html":{}}}],["randomjok",{"_index":324,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["reach",{"_index":288,"title":{},"body":{"components/JokesComponent.html":{}}}],["reactiveformsmodul",{"_index":538,"title":{},"body":{"modules/PublicModule.html":{}}}],["redirect",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["reiniti",{"_index":345,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["remov",{"_index":292,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{}}}],["removefromfavorit",{"_index":328,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["removefromfavorites(27",{"_index":342,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["removefromfavorites(id",{"_index":294,"title":{},"body":{"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{}}}],["requir",{"_index":408,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res['msg",{"_index":205,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["reset",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resetcountdown",{"_index":554,"title":{},"body":{"components/TimerComponent.html":{}}}],["resolv",{"_index":363,"title":{},"body":{"guards/JokesResolverService.html":{},"modules/PublicModule.html":{}}}],["resolver.servic",{"_index":534,"title":{},"body":{"modules/PublicModule.html":{}}}],["resolver.service.t",{"_index":362,"title":{},"body":{"guards/JokesResolverService.html":{}}}],["resolver.service.ts:10",{"_index":365,"title":{},"body":{"guards/JokesResolverService.html":{}}}],["resolver.service.ts:14",{"_index":366,"title":{},"body":{"guards/JokesResolverService.html":{}}}],["resolvers/jok",{"_index":533,"title":{},"body":{"modules/PublicModule.html":{}}}],["result",{"_index":43,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["root",{"_index":32,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"injectables/TimerManagementService.html":{}}}],["root'},{'nam",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["rout",{"_index":175,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":195,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["routermodul",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{}}}],["routermodule.forchild(protectedrout",{"_index":464,"title":{},"body":{"modules/ProtectedModule.html":{}}}],["routermodule.forchild(publicrout",{"_index":540,"title":{},"body":{"modules/PublicModule.html":{}}}],["routermodule.forroot(rout",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":311,"title":{},"body":{"components/JokesComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["run",{"_index":645,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"guards/JokesResolverService.html":{},"components/TimerComponent.html":{},"dependencies.html":{}}}],["selector",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["server",{"_index":637,"title":{},"body":{"index.html":{}}}],["services/alert.servic",{"_index":266,"title":{},"body":{"components/JokesComponent.html":{},"components/TimerComponent.html":{}}}],["services/auth.servic",{"_index":238,"title":{},"body":{"components/HeaderComponent.html":{}}}],["services/jok",{"_index":267,"title":{},"body":{"components/JokesComponent.html":{},"components/TimerComponent.html":{}}}],["services/tim",{"_index":573,"title":{},"body":{"components/TimerComponent.html":{}}}],["setfavoritejok",{"_index":329,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["setfavoritejokes(jok",{"_index":343,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["setrandomjok",{"_index":330,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["setrandomjokes(jok",{"_index":346,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["settimeout",{"_index":39,"title":{},"body":{"injectables/AlertService.html":{}}}],["shared/components/header/header.compon",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/components/pag",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/modules/material.modul",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{}}}],["shared/modules/shared.modul",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{}}}],["shared/services/alert.servic",{"_index":386,"title":{},"body":{"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{}}}],["shared/services/api.servic",{"_index":367,"title":{},"body":{"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["shared/services/auth",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shared/services/auth.servic",{"_index":385,"title":{},"body":{"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["shared/services/jok",{"_index":493,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["shared/services/tim",{"_index":492,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["sharedcompon",{"_index":549,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sharedmodul",{"_index":140,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":9,"title":{},"body":{"injectables/AlertService.html":{},"components/JokesComponent.html":{}}}],["show(cont",{"_index":10,"title":{},"body":{"injectables/AlertService.html":{}}}],["size",{"_index":319,"title":{},"body":{"components/JokesComponent.html":{}}}],["snackbar",{"_index":38,"title":{},"body":{"injectables/AlertService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"modules/ProtectedModule.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"interfaces/User.html":{}}}],["space",{"_index":280,"title":{},"body":{"components/JokesComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["spec\\.t",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api.service.t",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.module.t",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.t",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/protected/protect",{"_index":435,"title":{},"body":{"components/ProtectedLayoutComponent.html":{},"coverage.html":{}}}],["src/app/protected/protected.module.t",{"_index":459,"title":{},"body":{"modules/ProtectedModule.html":{}}}],["src/app/public/components/login/login.component.t",{"_index":369,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/public/components/login/login.component.ts:15",{"_index":384,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/public/components/login/login.component.ts:18",{"_index":375,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/public/components/login/login.component.ts:26",{"_index":377,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/public/components/login/login.component.ts:32",{"_index":378,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/public/components/publ",{"_index":465,"title":{},"body":{"components/PublicLayoutComponent.html":{},"coverage.html":{}}}],["src/app/public/public.module.t",{"_index":532,"title":{},"body":{"modules/PublicModule.html":{}}}],["src/app/public/resolvers/jok",{"_index":361,"title":{},"body":{"guards/JokesResolverService.html":{}}}],["src/app/shared/components/header/header.component.t",{"_index":228,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/header/header.component.ts:14",{"_index":237,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:18",{"_index":235,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:22",{"_index":236,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:9",{"_index":234,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/jokes/jokes.component.t",{"_index":249,"title":{},"body":{"components/JokesComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/jokes/jokes.component.ts:15",{"_index":259,"title":{},"body":{"components/JokesComponent.html":{}}}],["src/app/shared/components/jokes/jokes.component.ts:19",{"_index":255,"title":{},"body":{"components/JokesComponent.html":{}}}],["src/app/shared/components/jokes/jokes.component.ts:22",{"_index":265,"title":{},"body":{"components/JokesComponent.html":{}}}],["src/app/shared/components/jokes/jokes.component.ts:25",{"_index":264,"title":{},"body":{"components/JokesComponent.html":{}}}],["src/app/shared/components/pag",{"_index":428,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/timer/timer.component.t",{"_index":550,"title":{},"body":{"components/TimerComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/timer/timer.component.ts:19",{"_index":561,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/shared/components/timer/timer.component.ts:23",{"_index":565,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/shared/components/timer/timer.component.ts:33",{"_index":570,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/shared/components/timer/timer.component.ts:34",{"_index":572,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/shared/components/timer/timer.component.ts:37",{"_index":566,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/shared/components/timer/timer.component.ts:44",{"_index":568,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/shared/components/timer/timer.component.ts:59",{"_index":567,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/shared/components/timer/timer.component.ts:65",{"_index":569,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/shared/interfaces/jok",{"_index":269,"title":{},"body":{"components/JokesComponent.html":{},"guards/JokesResolverService.html":{},"components/PublicLayoutComponent.html":{}}}],["src/app/shared/interfaces/joke.t",{"_index":245,"title":{},"body":{"interfaces/Joke.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/us",{"_index":389,"title":{},"body":{"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{}}}],["src/app/shared/interfaces/user.t",{"_index":591,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/shared/modules/material.module.t",{"_index":418,"title":{},"body":{"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/modules/shared.module.t",{"_index":545,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/services/alert.service.t",{"_index":5,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/app/shared/services/alert.service.ts:15",{"_index":16,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/shared/services/api.service.t",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/services/api.service.ts:20",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/services/api.service.ts:24",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/services/api.service.ts:28",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/services/api.service.ts:33",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/services/api.service.ts:38",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/services/auth",{"_index":186,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["src/app/shared/services/auth.service.t",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/shared/services/auth.service.ts:24",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:41",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/jok",{"_index":321,"title":{},"body":{"injectables/JokesManagementService.html":{},"coverage.html":{}}}],["src/app/shared/services/tim",{"_index":584,"title":{},"body":{"injectables/TimerManagementService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":612,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":613,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":614,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":560,"title":{"index.html":{}},"body":{"components/TimerComponent.html":{}}}],["startcount",{"_index":585,"title":{},"body":{"injectables/TimerManagementService.html":{}}}],["startcountdown",{"_index":555,"title":{},"body":{"components/TimerComponent.html":{}}}],["state",{"_index":491,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["statement",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["still",{"_index":278,"title":{},"body":{"components/JokesComponent.html":{}}}],["stopcount",{"_index":586,"title":{},"body":{"injectables/TimerManagementService.html":{}}}],["stopcountdown",{"_index":556,"title":{},"body":{"components/TimerComponent.html":{}}}],["store",{"_index":406,"title":{},"body":{"components/LoginComponent.html":{}}}],["storedjok",{"_index":495,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["string",{"_index":11,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"interfaces/User.html":{}}}],["style",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["styleurl",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["subject",{"_index":194,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["subject.complet",{"_index":211,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["subject.next(fals",{"_index":207,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["subject.next(tru",{"_index":206,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["subscript",{"_index":571,"title":{},"body":{"components/TimerComponent.html":{}}}],["support",{"_index":261,"title":{},"body":{"components/JokesComponent.html":{},"modules.html":{}}}],["svg",{"_index":649,"title":{},"body":{"modules.html":{}}}],["t",{"_index":582,"title":{},"body":{"components/TimerComponent.html":{}}}],["tabl",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["templateurl",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["there'",{"_index":277,"title":{},"body":{"components/JokesComponent.html":{}}}],["this.alert.show",{"_index":285,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{}}}],["this.alert.show(`welcom",{"_index":450,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["this.alert.show(error.error.err",{"_index":210,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.api.verify().subscribe((r",{"_index":204,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.apiserivce.login(this.form.value).subscribe((data",{"_index":391,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.getrandomjok",{"_index":368,"title":{},"body":{"guards/JokesResolverService.html":{}}}],["this.apiservice.getrandomjoke().subscribe((jok",{"_index":504,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.auth.isloggedin",{"_index":200,"title":{},"body":{"guards/AuthGuardService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["this.auth.logout",{"_index":239,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.count",{"_index":581,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.favoritejok",{"_index":352,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["this.favoritejokes.find((jok",{"_index":359,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["this.favoritejokes.push(jok",{"_index":353,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["this.http.get(`${api_url}/login/verifi",{"_index":79,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get>(`${api_url}/jok",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get>(`${api_url}/jokes/1",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(`${api_url}/login",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.iscount",{"_index":501,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.iscounting.emit(fals",{"_index":590,"title":{},"body":{"injectables/TimerManagementService.html":{}}}],["this.iscounting.emit(tru",{"_index":589,"title":{},"body":{"injectables/TimerManagementService.html":{}}}],["this.isinfavorites(joke.id",{"_index":276,"title":{},"body":{"components/JokesComponent.html":{}}}],["this.jokesmanagement.addtofavorites(jok",{"_index":283,"title":{},"body":{"components/JokesComponent.html":{}}}],["this.jokesmanagement.addtofavorites(joke.data[0",{"_index":506,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.jokesmanagement.getfavoritejok",{"_index":500,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.jokesmanagement.getfavoritejokes().length",{"_index":281,"title":{},"body":{"components/JokesComponent.html":{},"components/TimerComponent.html":{}}}],["this.jokesmanagement.getrandomjok",{"_index":499,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.jokesmanagement.isinfavorites(id",{"_index":271,"title":{},"body":{"components/JokesComponent.html":{}}}],["this.jokesmanagement.isinfavorites(joke.data[0].id",{"_index":505,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.jokesmanagement.removefromfavorites(id",{"_index":295,"title":{},"body":{"components/JokesComponent.html":{}}}],["this.jokesmanagement.removefromfavorites(joke.id",{"_index":293,"title":{},"body":{"components/JokesComponent.html":{}}}],["this.jokesmanagement.setfavoritejok",{"_index":498,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.jokesmanagement.setfavoritejokes(storedjok",{"_index":497,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.jokesmanagement.setrandomjokes(this.route.snapshot.data.jokes.data",{"_index":494,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.randomjok",{"_index":351,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["this.router.navig",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['dashboard",{"_index":390,"title":{},"body":{"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["this.router.navigate(['login",{"_index":208,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.setfavoritejokes([...this.favoritejokes.filter((jok",{"_index":356,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["this.snackbar.open(cont",{"_index":40,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.startcountdown",{"_index":574,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.stopcountdown",{"_index":576,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.tim",{"_index":580,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timermanagement.iscounting.subscribe((iscount",{"_index":575,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timermanagement.startcount",{"_index":502,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.timermanagement.stopcount",{"_index":503,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["this.timersubscript",{"_index":577,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.togglecount",{"_index":507,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["timer",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["timer(0",{"_index":578,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer.component.html",{"_index":552,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer.component.scss",{"_index":551,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer_off",{"_index":508,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["timercompon",{"_index":125,"title":{"components/TimerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/SharedModule.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["timermanag",{"_index":472,"title":{},"body":{"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["timermanagementservic",{"_index":473,"title":{"injectables/TimerManagementService.html":{}},"body":{"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"coverage.html":{}}}],["timersubscript",{"_index":553,"title":{},"body":{"components/TimerComponent.html":{}}}],["titl",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["toggl",{"_index":490,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["togglecount",{"_index":468,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["token",{"_index":77,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["top",{"_index":416,"title":{},"body":{"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["tree",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["true",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JokesManagementService.html":{},"components/PublicLayoutComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":20,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Joke.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"guards/JokesResolverService.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unqiu",{"_index":274,"title":{},"body":{"components/JokesComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["user",{"_index":66,"title":{"interfaces/User.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/ProtectedLayoutComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["userdata",{"_index":448,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["userdata.user.firstnam",{"_index":451,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["userdata.user.lastnam",{"_index":452,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["userid",{"_index":446,"title":{},"body":{"components/ProtectedLayoutComponent.html":{}}}],["usernam",{"_index":380,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["username/email",{"_index":407,"title":{},"body":{"components/LoginComponent.html":{}}}],["valid",{"_index":387,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.requir",{"_index":382,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{}}}],["variabl",{"_index":605,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["verifi",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{}}}],["view",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["void",{"_index":25,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/JokesComponent.html":{},"injectables/JokesManagementService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProtectedLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerManagementService.html":{}}}],["warn",{"_index":284,"title":{},"body":{"components/JokesComponent.html":{}}}],["whether",{"_index":337,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["width",{"_index":315,"title":{},"body":{"components/JokesComponent.html":{},"components/LoginComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["window.localstorage.clear",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["window.localstorage.getitem('ch_us",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["window.localstorage.setitem('ch_favorite_jok",{"_index":354,"title":{},"body":{"injectables/JokesManagementService.html":{}}}],["window.localstorage.setitem('ch_us",{"_index":392,"title":{},"body":{"components/LoginComponent.html":{}}}],["work",{"_index":484,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["wrap",{"_index":509,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["x1f625",{"_index":300,"title":{},"body":{"components/JokesComponent.html":{}}}],["ye",{"_index":23,"title":{},"body":{"injectables/AlertService.html":{}}}],["zone.j",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/ProtectedModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/alert.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(content: string, button?: string, duration?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/alert.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        content\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        button\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        duration\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n    /**\n   * @ignore\n   */\n  constructor(\n    private snackbar: MatSnackBar\n  ) { }\n\n  public show(content: string, button?: string, duration?: number) {\n    setTimeout(() => {\n      this.snackbar.open(content, button ? button : null, {duration: duration ? duration : 3000});\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/api.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getRandomJoke\n                            \n                            \n                                    Public\n                                getRandomJokes\n                            \n                            \n                                    Public\n                                getUserJokes\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getRandomJoke\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRandomJoke()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/api.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getRandomJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRandomJokes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/api.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable>\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUserJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUserJokes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/api.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login(body)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/api.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            verify\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        verify()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/api.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Joke } from './../interfaces/joke';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../interfaces/user';\n\nconst API_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n    /**\n   * @ignore\n   */\n  constructor(private http: HttpClient) { }\n\n  public getRandomJokes(): Observable> {\n    return this.http.get>(`${API_URL}/jokes`);\n  }\n\n  public getRandomJoke(): Observable {\n    return this.http.get>(`${API_URL}/jokes/1`);\n  }\n\n  public login(body): Observable {\n    return this.http.post(`${API_URL}/login`, body);\n  }\n\n  // Verify logged in user token\n  public verify() {\n    const token = JSON.parse(window.localStorage.getItem('CH_user')).token;\n    return this.http.get(`${API_URL}/login/verify`, {headers: {Authorization: `Bearer ${token}`} });\n  }\n\n  public getUserJokes() {\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'frontmen-angular-client'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontmen-angular-client';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'JokesComponent', 'selector': 'app-jokes'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProtectedLayoutComponent', 'selector': 'app-protected-layout'},{'name': 'PublicLayoutComponent', 'selector': 'app-public-layout'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SharedModule } from './shared/modules/shared.module';\nimport { MaterialModule } from './shared/modules/material.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './shared/components/header/header.component';\nimport { PageNotFoundComponent } from './shared/components/page-not-found/page-not-found.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    SharedModule\n  ],\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    PageNotFoundComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTitleText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTitleText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getTitleText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { AuthGuardService } from './shared/services/auth-guard.service';\nimport { PageNotFoundComponent } from './shared/components/page-not-found/page-not-found.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: './public/public.module#PublicModule'\n  },\n  {\n    path: 'dashboard',\n    loadChildren: './protected/protected.module#ProtectedModule',\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardService.html":{"url":"guards/AuthGuardService.html","title":"guard - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/services/auth-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/auth-guard.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable | boolean\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { AuthService } from './auth.service';\nimport { ApiService } from './api.service';\nimport { AlertService } from './alert.service';\nimport { Observable, Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n    /**\n   * @ignore\n   */\n  constructor(\n    public router: Router,\n    private alert: AlertService,\n    private api: ApiService,\n    private auth: AuthService\n\n    ) { }\n\n  canActivate(): Observable | boolean {\n    if (this.auth.isLoggedIn()) {\n      const subject = new Subject();\n      // Verify token over the gateway\n      this.api.verify().subscribe((res) => {\n        if (res['msg'] === 'Authorized') {\n          subject.next(true);\n        } else {\n          subject.next(false);\n          this.router.navigate(['login']);\n        }\n      }, (error) => {\n        this.alert.show(error.error.err);\n        subject.next(false);\n        this.router.navigate(['login']);\n      }, () => {\n        subject.complete();\n      });\n      return subject;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/auth.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Check if the user is logged in\n\n\n                            \n                                    Example :\n                                        \n                                            isLoggedIn();\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/auth.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Log the user out of the application and redirect back to public view.\n\n\n                            \n                                    Example :\n                                        \n                                            logout();\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class AuthService {\n      /**\n   * @ignore\n   */\n  constructor(private router: Router) { }\n\n  /**\n* Check if the user is logged in\n*\n* @example\n*\n* isLoggedIn();\n*\n* @returns {boolean}\n*/\n  isLoggedIn(): boolean {\n    if (window.localStorage.getItem('CH_user') && JSON.parse(window.localStorage.getItem('CH_user')).token) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n/**\n* Log the user out of the application and redirect back to public view.\n*\n* @example\n*\n* logout();\n*\n* @returns {void}\n*/\n  logout() {\n    window.localStorage.clear();\n    this.router.navigate(['']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/header/header.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/header/header.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/header/header.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/header/header.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  constructor(\n    private auth: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n\n  isLoggedIn(): boolean {\n    return this.auth.isLoggedIn();\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    Chuck Norris Jokes\n\n    \n    \n      \n          \n            account_circle\n             Login\n          \n      \n      \n          \n            lock\n             Logout\n          \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Chuck Norris Jokes                                    account_circle             Login                                            lock             Logout                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'JokesComponent', 'selector': 'app-jokes'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProtectedLayoutComponent', 'selector': 'app-protected-layout'},{'name': 'PublicLayoutComponent', 'selector': 'app-public-layout'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Joke.html":{"url":"interfaces/Joke.html","title":"interface - Joke","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Joke\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/joke.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        categories\n                                \n                                \n                                        id\n                                \n                                \n                                        joke\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        joke\n                                    \n                                \n                                \n                                    \n                                        joke:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Joke {\n  id: number;\n  joke: string;\n  categories?: Array;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JokesComponent.html":{"url":"components/JokesComponent.html","title":"component - JokesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  JokesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/jokes/jokes.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-jokes\n            \n\n            \n                styleUrls\n                ./jokes.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./jokes.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alert\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                jokes\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jokesManagement: JokesManagementService, alert: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/jokes/jokes.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jokesManagement\n                                                  \n                                                        \n                                                                    JokesManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alert\n                                                  \n                                                        \n                                                                    AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        jokes\n                    \n                    \n                        Array of jokes to display in the component list\n\n                            \n                            Type :    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/jokes/jokes.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                    \n                        Type of jokes list. Currently supports 'random' and 'favorites'.\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/jokes/jokes.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/jokes/jokes.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alert\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alert:     AlertService\n\n                    \n                \n                    \n                        \n                            Type :     AlertService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/jokes/jokes.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AlertService } from './../../services/alert.service';\nimport { JokesManagementService } from './../../services/jokes-management.service';\nimport { Joke } from 'src/app/shared/interfaces/joke';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-jokes',\n  templateUrl: './jokes.component.html',\n  styleUrls: ['./jokes.component.scss']\n})\nexport class JokesComponent implements OnInit {\n      /**\n    Array of jokes to display in the component list\n  */\n  @Input() jokes: Array;\n      /**\n    Type of jokes list. Currently supports 'random' and 'favorites'.\n  */\n  @Input() type: string;\n  constructor(\n    private jokesManagement: JokesManagementService,\n    public alert: AlertService\n    ) { }\n\n  ngOnInit() {\n\n  }\n\n    /**\n   * @ignore\n   */\n  isInFavorites(id): boolean {\n    return this.jokesManagement.isInFavorites(id);\n  }\n    /**\n   * @ignore\n   */\n  addToFavorites(joke) {\n    // Add joke to favorites, if it is unqiue one.\n    if (!this.isInFavorites(joke.id)) {\n      // Add joke to favorites, if there's still enough space in favorite list.\n      if (this.jokesManagement.getFavoriteJokes().length !== 10) {\n        this.jokesManagement.addToFavorites(joke);\n      } else {\n        // If no enough space, show warnning to user.\n        this.alert.show('⚠️ Favorite list max limit reached', 'Dismiss');\n      }\n    } else {\n      // If joke already exists in favorite list, remove it.\n      this.jokesManagement.removeFromFavorites(joke.id);\n    }\n  }\n\n/**\n   * @ignore\n   */\n  removeFromFavorites(id) {\n    this.jokesManagement.removeFromFavorites(id)\n  }\n\n      /**\n   * @ignore\n   */\n  getJokesLength(): number {\n    return this.jokesManagement.getFavoriteJokes().length;\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n          \n              {{isInFavorites(joke.id) ? 'favorite' : 'favorite_border'}}\n          \n          {{joke.joke}}\n      \n      \n    \n    No random jokes yet &#x1F625;\n\n\n\n    \n      \n          \n              delete_forever\n          \n          {{joke.joke}}\n      \n      \n    \n    No favorite jokes yet &#x1F625;\n\n\n    \n\n    \n                \n                    ./jokes.component.scss\n                \n                .random-jokes-list, .favorite-jokes-list{\n  list-style: none;\n  padding: 0;\n  max-height: 400px;\n  overflow: auto;\n  .joke-container{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n\n    p{\n      font-size: 14px;\n    }\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{isInFavorites(joke.id) ? \\'favorite\\' : \\'favorite_border\\'}}                    {{joke.joke}}                    No random jokes yet 😥                                  delete_forever                    {{joke.joke}}                    No favorite jokes yet 😥'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'JokesComponent', 'selector': 'app-jokes'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProtectedLayoutComponent', 'selector': 'app-protected-layout'},{'name': 'PublicLayoutComponent', 'selector': 'app-public-layout'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JokesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JokesManagementService.html":{"url":"injectables/JokesManagementService.html","title":"injectable - JokesManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JokesManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/jokes-management.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                favoriteJokes\n                            \n                            \n                                randomJokes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToFavorites\n                            \n                            \n                                getFavoriteJokes\n                            \n                            \n                                getRandomJokes\n                            \n                            \n                                isInFavorites\n                            \n                            \n                                removeFromFavorites\n                            \n                            \n                                setFavoriteJokes\n                            \n                            \n                                setRandomJokes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addToFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \naddToFavorites(joke: Joke)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:87\n                            \n                        \n\n\n                \n                    \n                            Add joke to favorite list\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        joke\n                                                        \n                                                                    Joke\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Joke Object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            addToFavorites(joke: Joke);\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFavoriteJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFavoriteJokes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Return favorite jokes array\n\n\n                            \n                                    Example :\n                                        \n                                            getFavoriteJokes();\n                                        \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRandomJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRandomJokes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Return random jokes array\n\n\n                            \n                                    Example :\n                                        \n                                            getRandomJokes();\n                                        \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isInFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \nisInFavorites(id)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:117\n                            \n                        \n\n\n                \n                    \n                            Check whether a joke is in favorites list or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Joke ID\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            isInFavorites(100) ? doSomethingIfTrue() : doOtherthingIfFalse();\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeFromFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveFromFavorites(id)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:102\n                            \n                        \n\n\n                \n                    \n                            Remove joke from favorite list\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Joke ID\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            removeFromFavorites(27);\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setFavoriteJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetFavoriteJokes(jokes: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:73\n                            \n                        \n\n\n                \n                    \n                            Reinitiate the array of favorite jokes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jokes\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of Jokes\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            setFavoriteJokes(jokes);\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setRandomJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetRandomJokes(jokes: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Reinitiate the array of random jokes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jokes\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of Jokes\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            setRandomJokes(jokes);\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            favoriteJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        favoriteJokes:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:16\n                            \n                        \n\n                \n                    \n                        Array of favorite Jokes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            randomJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        randomJokes:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/jokes-management.service.ts:11\n                            \n                        \n\n                \n                    \n                        Array of random Jokes\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Joke } from './../interfaces/joke';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JokesManagementService {\n  /**\n    Array of random Jokes\n  */\n  randomJokes: Array;\n\n  /**\n  Array of favorite Jokes\n  */\n  favoriteJokes: Array;\n    /**\n   * @ignore\n   */\n  constructor() { }\n\n/**\n* Return random jokes array\n*\n* @example\n*\n* getRandomJokes();\n*\n* @param {object} joke Joke Object\n* @returns {Array}\n*/\n  getRandomJokes(): Array {\n    return this.randomJokes;\n  }\n\n/**\n* Reinitiate the array of random jokes\n*\n* @example\n*\n* setRandomJokes(jokes);\n*\n* @param {Array} jokes Array of Jokes\n* @returns {void}\n*/\n  setRandomJokes(jokes: Array) {\n    this.randomJokes = [...jokes];\n  }\n\n  /**\n* Return favorite jokes array\n*\n* @example\n*\n* getFavoriteJokes();\n*\n* @returns {Array}\n*/\n  getFavoriteJokes(): Array {\n    return this.favoriteJokes;\n  }\n\n  /**\n* Reinitiate the array of favorite jokes\n*\n* @example\n*\n* setFavoriteJokes(jokes);\n*\n* @param {Array} jokes Array of Jokes\n* @returns {void}\n*/\n  setFavoriteJokes(jokes: Array) {\n    this.favoriteJokes = [...jokes];\n  }\n\n  /**\n* Add joke to favorite list\n*\n* @example\n*\n* addToFavorites(joke: Joke);\n*\n* @param {object} joke Joke Object\n* @returns {void}\n*/\n  addToFavorites(joke: Joke) {\n    this.favoriteJokes.push(joke);\n    window.localStorage.setItem('CH_favorite_jokes', JSON.stringify(this.getFavoriteJokes()))\n  }\n\n/**\n* Remove joke from favorite list\n*\n* @example\n*\n* removeFromFavorites(27);\n*\n* @param {number} id Joke ID\n* @returns {void}\n*/\n  removeFromFavorites(id): void {\n    this.setFavoriteJokes([...this.favoriteJokes.filter((joke) => joke.id !== id)]);\n    window.localStorage.setItem('CH_favorite_jokes', JSON.stringify(this.getFavoriteJokes()));\n  }\n\n/**\n* Check whether a joke is in favorites list or not\n*\n* @example\n*\n* isInFavorites(100) ? doSomethingIfTrue() : doOtherthingIfFalse();\n*\n* @param {number} id Joke ID\n* @returns {boolean}\n*/\n  isInFavorites(id): boolean {\n    const inFavorites = this.favoriteJokes.find((joke) => {\n      return joke.id === id;\n    });\n    return inFavorites ? true : false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JokesResolverService.html":{"url":"guards/JokesResolverService.html","title":"guard - JokesResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    JokesResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/public/resolvers/jokes-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/public/resolvers/jokes-resolver.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/public/resolvers/jokes-resolver.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable>\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { ApiService } from './../../shared/services/api.service';\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Joke } from 'src/app/shared/interfaces/joke';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JokesResolverService implements Resolve {\n\n  constructor(private apiService: ApiService) { }\n\n  resolve(): Observable> {\n    return this.apiService.getRandomJokes();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/public/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiSerivce: ApiService, alert: AlertService, router: Router, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/public/components/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiSerivce\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alert\n                                                  \n                                                        \n                                                                    AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/public/components/login/login.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/public/components/login/login.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     \n\n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/public/components/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AuthService } from './../../../shared/services/auth.service';\nimport { AlertService } from './../../../shared/services/alert.service';\nimport { ApiService } from './../../../shared/services/api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { User } from 'src/app/shared/interfaces/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  form = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  });\n  constructor(\n    private apiSerivce: ApiService,\n    private alert: AlertService,\n    private router: Router,\n    private auth: AuthService\n    ) { }\n\n  ngOnInit() {\n    if (this.auth.isLoggedIn()) {\n      this.router.navigate(['dashboard']);\n    }\n  }\n\n  onSubmit() {\n    this.apiSerivce.login(this.form.value).subscribe((data: User) => {\n      window.localStorage.clear();\n      window.localStorage.setItem('CH_user', JSON.stringify({\n        token:  data.token,\n        user: {\n            firstname: data.user.firstname,\n            lastname: data.user.lastname,\n            email: data.user.email,\n            guid: data.user.guid,\n          }\n        })\n      );\n      this.router.navigate(['dashboard']);\n    }, (error) => {\n      this.alert.show(`⚠️ ${error.error.err || error.statusText}`, 'Dismiss', null);\n    });\n  }\n\n}\n\n    \n\n    \n        \n  Login to your account to check your stored favorite list.\n  \n    \n      \n        Username/Email\n        \n        \n          Username/Email is required\n        \n      \n\n      \n        Password\n        \n        \n          Password is required\n        \n      \n\n      Login\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .login-container{\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  mat-card{\n    width: 30%;\n\n    form{\n      display: flex;\n      flex-direction: column;\n      mat-form-field{\n        margin-top: 10px;\n      }\n      button{\n        margin: 10px 0;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Login to your account to check your stored favorite list.                    Username/Email                          Username/Email is required                            Password                          Password is required                    Login      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'JokesComponent', 'selector': 'app-jokes'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProtectedLayoutComponent', 'selector': 'app-protected-layout'},{'name': 'PublicLayoutComponent', 'selector': 'app-public-layout'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/modules/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n  MatToolbarModule,\n  MatCardModule,\n  MatIconModule,\n  MatButtonModule,\n  MatDividerModule,\n  MatProgressBarModule,\n  MatSnackBarModule,\n  MatFormFieldModule,\n  MatInputModule\n} from '@angular/material';\n\nconst materialModules = [\n  MatToolbarModule,\n  MatCardModule,\n  MatIconModule,\n  MatButtonModule,\n  MatDividerModule,\n  MatProgressBarModule,\n  MatSnackBarModule,\n  MatFormFieldModule,\n  MatInputModule\n];\n\n@NgModule({\n  imports: [materialModules],\n  exports: [materialModules]\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/page-not-found/page-not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/page-not-found/page-not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/page-not-found/page-not-found.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        Page not found\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Page not found'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'JokesComponent', 'selector': 'app-jokes'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProtectedLayoutComponent', 'selector': 'app-protected-layout'},{'name': 'PublicLayoutComponent', 'selector': 'app-public-layout'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProtectedLayoutComponent.html":{"url":"components/ProtectedLayoutComponent.html","title":"component - ProtectedLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProtectedLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/protected/protected-layout/protected-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-protected-layout\n            \n\n            \n                styleUrls\n                ./protected-layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./protected-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserFavoriteJokes\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alert: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/protected/protected-layout/protected-layout.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alert\n                                                  \n                                                        \n                                                                    AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserFavoriteJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserFavoriteJokes(userId)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/protected/protected-layout/protected-layout.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/protected/protected-layout/protected-layout.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { AlertService } from './../../shared/services/alert.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/shared/interfaces/user';\n\n@Component({\n  selector: 'app-protected-layout',\n  templateUrl: './protected-layout.component.html',\n  styleUrls: ['./protected-layout.component.scss']\n})\nexport class ProtectedLayoutComponent implements OnInit {\n\n  constructor(\n    private alert: AlertService\n  ) { }\n\n  ngOnInit() {\n    const userData: User = JSON.parse(localStorage.getItem('CH_user'));\n    this.alert.show(`Welcome back ${userData.user.firstname} ${userData.user.lastname}`);\n  }\n\n  getUserFavoriteJokes(userId) {\n    return [];\n  }\n}\n\n    \n\n    \n        \n    \n      \n        Your Favorites Jokes\n      \n      \n          \n        \n    \n\n\n    \n\n    \n                \n                    ./protected-layout.component.scss\n                \n                .protected-layout-container{\n  display: flex;\n    justify-content: center;\n    align-items: center;\n    height: calc(100% - 64px);\n\n    .favorites-jokes-card{\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Your Favorites Jokes                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'JokesComponent', 'selector': 'app-jokes'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProtectedLayoutComponent', 'selector': 'app-protected-layout'},{'name': 'PublicLayoutComponent', 'selector': 'app-public-layout'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProtectedLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProtectedModule.html":{"url":"modules/ProtectedModule.html","title":"module - ProtectedModule","body":"\n                   \n\n\n\n\n    Modules\n    ProtectedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProtectedModule\n\n\n\ncluster_ProtectedModule_declarations\n\n\n\ncluster_ProtectedModule_imports\n\n\n\n\nProtectedLayoutComponent\n\nProtectedLayoutComponent\n\n\n\nProtectedModule\n\nProtectedModule\n\nProtectedModule -->\n\nProtectedLayoutComponent->ProtectedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nProtectedModule -->\n\nMaterialModule->ProtectedModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProtectedModule -->\n\nSharedModule->ProtectedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/protected/protected.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProtectedLayoutComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MaterialModule } from './../shared/modules/material.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProtectedLayoutComponent } from './protected-layout/protected-layout.component'\nimport { SharedModule } from '../shared/modules/shared.module';\n\nconst protectedRoutes: Routes = [\n  {\n    path: '',\n    component: ProtectedLayoutComponent\n  }\n];\n\n@NgModule({\n  declarations: [ProtectedLayoutComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(protectedRoutes),\n    MaterialModule,\n    SharedModule\n  ]\n})\nexport class ProtectedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PublicLayoutComponent.html":{"url":"components/PublicLayoutComponent.html","title":"component - PublicLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PublicLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/public/components/public-layout/public-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-public-layout\n            \n\n            \n                styleUrls\n                ./public-layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./public-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isCounting\n                            \n                            \n                                toggleCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addJoke\n                            \n                            \n                                getFavoriteJokes\n                            \n                            \n                                getRandomJokes\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleCounting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, jokesManagement: JokesManagementService, timerManagement: TimerManagementService, apiService: ApiService, auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/public/components/public-layout/public-layout.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jokesManagement\n                                                  \n                                                        \n                                                                    JokesManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timerManagement\n                                                  \n                                                        \n                                                                    TimerManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addJoke\n                            \n                            \n                        \n                    \n                \n                \n                    \naddJoke(isCounting)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/public/components/public-layout/public-layout.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isCounting\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFavoriteJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFavoriteJokes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/public/components/public-layout/public-layout.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Array\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRandomJokes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRandomJokes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/public/components/public-layout/public-layout.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Array\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/public/components/public-layout/public-layout.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleCounting\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleCounting()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/public/components/public-layout/public-layout.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCounting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isCounting:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/public/components/public-layout/public-layout.component.ts:27\n                            \n                        \n\n                \n                    \n                        Boolean flag to check if the counter is working or not. Default is true.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toggleCount:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/public/components/public-layout/public-layout.component.ts:31\n                            \n                        \n\n                \n                    \n                        Event emitter that emits boolean value to toggle timer state\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { AuthService } from './../../../shared/services/auth.service';\nimport { ApiService } from './../../../shared/services/api.service';\nimport { TimerManagementService } from './../../../shared/services/timer-management.service';\nimport { JokesManagementService } from './../../../shared/services/jokes-management.service';\nimport { Joke } from 'src/app/shared/interfaces/joke';\nimport { Component, OnInit, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-public-layout',\n  templateUrl: './public-layout.component.html',\n  styleUrls: ['./public-layout.component.scss']\n})\nexport class PublicLayoutComponent implements OnInit {\n  constructor(\n    private route: ActivatedRoute,\n    private jokesManagement: JokesManagementService,\n    private timerManagement: TimerManagementService,\n    private apiService: ApiService,\n    private auth: AuthService,\n    private router: Router\n  ) { }\n\n  /**\n  Boolean flag to check if the counter is working or not. Default is true.\n  */\n  isCounting = true;\n  /**\n  Event emitter that emits boolean value to toggle timer state\n  */\n  toggleCount = new EventEmitter();\n  ngOnInit() {\n    this.jokesManagement.setRandomJokes(this.route.snapshot.data.jokes.data);\n    const storedJokes = JSON.parse(window.localStorage.getItem('CH_favorite_jokes'));\n    storedJokes ? this.jokesManagement.setFavoriteJokes(storedJokes) : this.jokesManagement.setFavoriteJokes([]);\n    if (this.auth.isLoggedIn()) {\n      this.router.navigate(['dashboard']);\n    }\n  }\n\n  getRandomJokes(): Array {\n    return this.jokesManagement.getRandomJokes();\n  }\n\n  getFavoriteJokes(): Array {\n    return this.jokesManagement.getFavoriteJokes();\n  }\n\n  toggleCounting() {\n    this.isCounting = !this.isCounting;\n    this.isCounting ? this.timerManagement.startCounting() : this.timerManagement.stopCounting();\n  }\n\n  addJoke(isCounting) {\n    if (isCounting) {\n      this.apiService.getRandomJoke().subscribe((joke) => {\n        // Add joke to favorites, only if it is unqiue one.\n        if (!this.jokesManagement.isInFavorites(joke.data[0].id)) {\n          this.jokesManagement.addToFavorites(joke.data[0]);\n        }\n      });\n    } else {\n      this.toggleCounting();\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Random Jokes\n      \n      \n        \n      \n    \n  \n  \n    \n        \n      \n        Favorites Jokes\n        \n        \n            {{isCounting ? 'timer' : 'timer_off'}}\n        \n      \n      \n          \n        \n    \n  \n\n\n    \n\n    \n                \n                    ./public-layout.component.scss\n                \n                .public-layout-container{\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n\n    .public-jokes-container, .favorites-jokes-container{\n      width: calc(50% - 40px);\n      min-width: 300px;\n      margin: 20px;\n    }\n\n    .favorites-jokes-container{\n      app-timer{\n        margin: 0;\n        top: 0;\n        left: 0;\n        width: 100%;\n        position: absolute;\n      }\n\n      .favorites-jokes-card{\n        mat-card-header{\n          align-items: center;\n\n          mat-card-title{\n            margin: 0;\n          }\n        }\n      }\n    }\n}\n\n:host ::ng-deep{\n  .mat-progress-bar{\n    border-radius: 4px 4px 0 0!important;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Random Jokes                                                            Favorites Jokes                            {{isCounting ? \\'timer\\' : \\'timer_off\\'}}                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'JokesComponent', 'selector': 'app-jokes'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProtectedLayoutComponent', 'selector': 'app-protected-layout'},{'name': 'PublicLayoutComponent', 'selector': 'app-public-layout'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PublicLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PublicModule.html":{"url":"modules/PublicModule.html","title":"module - PublicModule","body":"\n                   \n\n\n\n\n    Modules\n    PublicModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PublicModule\n\n\n\ncluster_PublicModule_declarations\n\n\n\ncluster_PublicModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nPublicModule\n\nPublicModule\n\nPublicModule -->\n\nLoginComponent->PublicModule\n\n\n\n\n\nPublicLayoutComponent\n\nPublicLayoutComponent\n\nPublicModule -->\n\nPublicLayoutComponent->PublicModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nPublicModule -->\n\nMaterialModule->PublicModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPublicModule -->\n\nSharedModule->PublicModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/public/public.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            PublicLayoutComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MaterialModule } from './../shared/modules/material.module';\nimport { JokesResolverService } from './resolvers/jokes-resolver.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PublicLayoutComponent } from './components/public-layout/public-layout.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/modules/shared.module';\n\nconst publicRoutes: Routes = [\n  {\n    path: '',\n    component: PublicLayoutComponent,\n    resolve: {\n      jokes: JokesResolverService\n    }\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  declarations: [PublicLayoutComponent, LoginComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(publicRoutes),\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule\n  ]\n})\nexport class PublicModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nJokesComponent\n\nJokesComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nJokesComponent->SharedModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nSharedModule -->\n\nTimerComponent->SharedModule\n\n\n\n\n\nJokesComponent \n\nJokesComponent \n\nJokesComponent  -->\n\nSharedModule->JokesComponent \n\n\n\n\n\nTimerComponent \n\nTimerComponent \n\nTimerComponent  -->\n\nSharedModule->TimerComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/modules/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            JokesComponent\n                        \n                        \n                            TimerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JokesComponent\n                        \n                        \n                            TimerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MaterialModule } from './material.module';\nimport { JokesComponent } from './../components/jokes/jokes.component';\nimport { NgModule } from '@angular/core';\nimport { TimerComponent } from '../components/timer/timer.component';\nimport { CommonModule } from '@angular/common';\nconst sharedComponents = [\n  JokesComponent,\n  TimerComponent\n];\n\n@NgModule({\n  imports: [CommonModule, MaterialModule],\n  declarations: [sharedComponents],\n  exports: [sharedComponents, CommonModule],\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimerComponent.html":{"url":"components/TimerComponent.html","title":"component - TimerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/timer/timer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-timer\n            \n\n            \n                styleUrls\n                ./timer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./timer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                timer\n                            \n                            \n                                timerSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                resetCountdown\n                            \n                            \n                                startCountdown\n                            \n                            \n                                stopCountdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                finalCount\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        count\n                    \n                    \n                        The number that the timer will start counting to\n\n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/timer/timer.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        finalCount\n                    \n                    \n                        method that emits boolean value when a complete loop ends.\n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/timer/timer.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/timer/timer.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetCountdown\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetCountdown()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/timer/timer.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startCountdown\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartCountdown()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/timer/timer.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopCountdown\n                            \n                            \n                        \n                    \n                \n                \n                    \nstopCountdown()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/timer/timer.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timer:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/timer/timer.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timerSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/timer/timer.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AlertService } from './../../services/alert.service';\nimport { JokesManagementService } from './../../services/jokes-management.service';\nimport { TimerManagementService } from './../../services/timer-management.service';\nimport { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { timer, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.scss']\n})\n\n\n\nexport class TimerComponent implements OnInit {\n    /**\n    The number that the timer will start counting to\n  */\n  @Input() count: number;\n    /**\n    method that emits boolean value when a complete loop ends.\n  */\n  @Output() finalCount = new EventEmitter();\n    /**\n   * @ignore\n   */\n  constructor(\n    private timerManagement: TimerManagementService,\n    private jokesManagement: JokesManagementService,\n    private alert: AlertService\n\n    ) { }\n  timer: number;\n  timerSubscription: Subscription;\n\n\n  ngOnInit() {\n    this.startCountdown();\n    this.timerManagement.isCounting.subscribe((isCounting) => {\n      isCounting ? this.startCountdown() : this.stopCountdown();\n    });\n  }\n\n  startCountdown() {\n    this.timerSubscription = timer(0, 1000).subscribe((t) => {\n      this.timer = this.count - t;\n      if (t === 5) {\n        if (this.jokesManagement.getFavoriteJokes().length \n    \n\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./timer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'JokesComponent', 'selector': 'app-jokes'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProtectedLayoutComponent', 'selector': 'app-protected-layout'},{'name': 'PublicLayoutComponent', 'selector': 'app-public-layout'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimerManagementService.html":{"url":"injectables/TimerManagementService.html","title":"injectable - TimerManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimerManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/timer-management.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isCounting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                startCounting\n                            \n                            \n                                stopCounting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startCounting\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartCounting()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/timer-management.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopCounting\n                            \n                            \n                        \n                    \n                \n                \n                    \nstopCounting()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/timer-management.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCounting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isCounting:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/timer-management.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerManagementService {\n  isCounting = new EventEmitter();\n    /**\n   * @ignore\n   */\n  constructor() { }\n\n  startCounting() {\n    this.isCounting.emit(true);\n  }\n\n  stopCounting() {\n    this.isCounting.emit(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  token: string;\n  user: {\n    guid: string;\n    firstname: string;\n    lastname: string;\n    username: string;\n    email: string;\n    password: string;\n    token: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/protected/protected-layout/protected-layout.component.ts\n            \n            \n                component\n            \n            \n                ProtectedLayoutComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/public/components/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/public/components/public-layout/public-layout.component.ts\n            \n            \n                component\n            \n            \n                PublicLayoutComponent\n            \n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/shared/components/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/jokes/jokes.component.ts\n            \n            \n                component\n            \n            \n                JokesComponent\n            \n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/page-not-found/page-not-found.component.ts\n            \n            \n                component\n            \n            \n                PageNotFoundComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/components/timer/timer.component.ts\n            \n            \n                component\n            \n            \n                TimerComponent\n            \n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/joke.ts\n            \n            \n                interface\n            \n            \n                Joke\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/user.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/modules/material.module.ts\n            \n            \n                variable\n            \n            \n                materialModules\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/modules/shared.module.ts\n            \n            \n                variable\n            \n            \n                sharedComponents\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/alert.service.ts\n            \n            \n                injectable\n            \n            \n                AlertService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/services/api.service.ts\n            \n            \n                injectable\n            \n            \n                ApiService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/api.service.ts\n            \n            \n                variable\n            \n            \n                API_URL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/jokes-management.service.ts\n            \n            \n                injectable\n            \n            \n                JokesManagementService\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/shared/services/timer-management.service.ts\n            \n            \n                injectable\n            \n            \n                TimerManagementService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.1.0\n        \n            @angular/cdk : ~7.1.1\n        \n            @angular/common : ~7.1.0\n        \n            @angular/compiler : ~7.1.0\n        \n            @angular/core : ~7.1.0\n        \n            @angular/forms : ~7.1.0\n        \n            @angular/material : ^7.1.1\n        \n            @angular/platform-browser : ~7.1.0\n        \n            @angular/platform-browser-dynamic : ~7.1.0\n        \n            @angular/router : ~7.1.0\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nChuck Norris Random Jokes\nClient Application\n\nInstallation\n\nGet and install server application Chuck Norris Jokes Backend\nClone client application git clone git@github.com:mmounirf/chuck-norris-jokes-backend.git\nMove into the cloned director and run npm install\n\n\nDocumentation\n Auto generated documentation can be found here.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProtectedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PublicModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ProtectedModule\n\n\n\ncluster_ProtectedModule_declarations\n\n\n\ncluster_PublicModule\n\n\n\ncluster_PublicModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nProtectedModule\n\nProtectedModule\n\nProtectedModule -->\n\nMaterialModule->ProtectedModule\n\n\n\n\n\nPublicModule\n\nPublicModule\n\nPublicModule -->\n\nMaterialModule->PublicModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nProtectedModule -->\n\nSharedModule->ProtectedModule\n\n\n\nPublicModule -->\n\nSharedModule->PublicModule\n\n\n\n\n\nJokesComponent \n\nJokesComponent \n\nJokesComponent  -->\n\nSharedModule->JokesComponent \n\n\n\n\n\nTimerComponent \n\nTimerComponent \n\nTimerComponent  -->\n\nSharedModule->TimerComponent \n\n\n\n\n\nProtectedLayoutComponent\n\nProtectedLayoutComponent\n\nProtectedModule -->\n\nProtectedLayoutComponent->ProtectedModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nPublicModule -->\n\nLoginComponent->PublicModule\n\n\n\n\n\nPublicLayoutComponent\n\nPublicLayoutComponent\n\nPublicModule -->\n\nPublicLayoutComponent->PublicModule\n\n\n\n\n\nJokesComponent\n\nJokesComponent\n\nSharedModule -->\n\nJokesComponent->SharedModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nSharedModule -->\n\nTimerComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL   (src/.../api.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            materialModules   (src/.../material.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            sharedComponents   (src/.../shared.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/services/api.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        API_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: 'http://localhost:3000'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiUrl: 'http://localhost:3000'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/modules/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            materialModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        materialModules:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MatToolbarModule,\n  MatCardModule,\n  MatIconModule,\n  MatButtonModule,\n  MatDividerModule,\n  MatProgressBarModule,\n  MatSnackBarModule,\n  MatFormFieldModule,\n  MatInputModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/modules/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sharedComponents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sharedComponents:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  JokesComponent,\n  TimerComponent\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
